##
## Eviden Landing Zones for Azure - AntiMalware Feature test
##
 
Describe 'OS-MGMT - Validate AntiMalware Feature' {

    BeforeAll {
        
        Set-AzContext -Subscription $custLndzSubscriptionId -tenant $tenantId -ErrorAction Stop | Out-Null
        #Search for the VM that is created for the Test
        $vmQuery = wait-untilTestingResourceIsReady -identifier "winvm01" -resourceType "Microsoft.Compute/virtualMachines" -tagPrefix $tagPrefix
        #Get the name of the Win VM
        $vmName = $vmQuery.Name
        #Get the resource group of the Win VM
        $vmResourceGroup = $vmQuery.ResourceGroupName
        #Get the current date/time
        $DateTime = (Get-Date).ToString()

    }

    Context 'Check extension status' {

        It 'Check if Antimalware tag is set' {

            Set-AzContext -Subscription $custLndzSubscriptionId -tenant $tenantId -ErrorAction Stop | Out-Null
            Write-Host "1. Checked if the Antimalware tag is set to true."
            $becauseText = 'provisioning of AntimalwareAgent is triggered by setting tag ' + $($tagPrefix) + 'Antimalware=true' + ' Checked at: ' + $($DateTime)
            (test-vmTags -virtualMachine $vmName -resourceGroup $vmResourceGroup -tagName "${tagPrefix}AntiMalware" -tagValue "true") `
            | Should -BeTrue `
            -Because $becauseText
        }

        It 'Trigger remediation runbook in the MGMT' {

            Set-AzContext -Subscription $custMgmtSubscriptionId -tenant $tenantId -ErrorAction Stop | Out-Null 
            Write-Host "2. Trigger remediation runbook in the MGMT."
            # Trigger remediation runbook
            $becauseText = 'The Runbook should have the status completed' + ' Checked at: ' + $($DateTime)
            $runbook_completed = start-mgmtAutomationRunbook -runbookName "OSMGMT-Create-RemediationTaskAntiMalware" -custMgmtSubscriptionId $custMgmtSubscriptionId -tenantId $tenantId -tagPrefix $tagPrefix -tagValuePrefix $tagValuePrefix
            $runbook_completed | Should -Be $true -Because $becauseText
            }

        It 'Check if AntiMalware extension is successfully provisioned' {

            Set-AzContext -Subscription $custLndzSubscriptionId -tenant $tenantId -ErrorAction Stop | Out-Null
            Write-Host "3. Checked if the Antimalware extension is successfully provisioned on the VM."
            $vmExtension = "IaaSAntimalware"
            $params = @{
                virtualMachine = $vmName
                resourceGroup = $vmResourceGroup
                extension = $vmExtension
            }
            #Wait until the extension is available
            $becauseText = 'extension' + $($vmExtension) + 'must be provisioned for AntiMalware features' + $($DateTime)
            $vmAntimalware = wait-loop -sleepTime 30 -numberOfRetries 50 -command "test-vmExtension" -params $Params
            $vmAntimalware | Should -BeTrue -Because $becauseText
            
        }
    }


}