{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{subscriptionPicker}"
        ],
        "parameters": [
          {
            "id": "f5f66862-c38c-4c25-98fa-ad1e7f463a0f",
            "version": "KqlParameterItem/1.0",
            "name": "subscriptionPicker",
            "label": "Subscription",
            "type": 6,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "includeAll": false,
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "b1ae8eeb-0570-482d-af41-aa81999ad44a",
            "version": "KqlParameterItem/1.0",
            "name": "resourceGroupPicker",
            "label": "Resource Group",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where ['type']contains  \"Microsoft.ContainerService\"\r\n| project resourceGroup\r\n| distinct resourceGroup",
            "crossComponentResources": [
              "{subscriptionPicker}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "af203fe9-f903-40c7-8d81-f9842eccfde4",
            "version": "KqlParameterItem/1.0",
            "name": "Location",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where ['type']contains  \"Microsoft.ContainerService\"\r\n| distinct location",
            "crossComponentResources": [
              "{subscriptionPicker}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "2a6e9715-65ac-4e99-8087-36d38c6df94b",
            "version": "KqlParameterItem/1.0",
            "name": "SKU",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "resources\r\n| where ['type']contains  \"Microsoft.ContainerService\"\r\n| extend Name=tostring(sku.name)\r\n| distinct Name",
            "crossComponentResources": [
              "{subscriptionPicker}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "c5cdfd6b-4b9e-4d8b-83f1-cf59a9d64b6f",
            "version": "KqlParameterItem/1.0",
            "name": "ProvisioningState",
            "label": "Status",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\"Online\", \"Failed\", \"Creating\"]",
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::all"
          },
          {
            "id": "cfea8840-7445-43c0-9181-448c3cb0d681",
            "version": "KqlParameterItem/1.0",
            "name": "[parameter(tagPrefix)]Managed",
            "label": "Managed by [parameter(companyName)]",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\"Yes\", \"No\"]",
            "defaultValue": "value::all"
          },
          {
            "id": "ebd25144-b13a-411c-a76f-4a15a2b2e668",
            "version": "KqlParameterItem/1.0",
            "name": "MonitoringInsights",
            "label": "Monitoring Insights",
            "type": 2,
            "isRequired": true,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "jsonData": "[\"Enabled\", \"Not Enabled\"]",
            "defaultValue": "value::all"
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "name": "parameters - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "## Overview Azure Kubernetes Services Deployed"
      },
      "name": "text - 6"
    },
    {
      "type": 1,
      "content": {
        "json": "#### No Azure Kubernetes Services are deployed in selected subscription(s).",
        "style": "info"
      },
      "conditionalVisibility": {
        "parameterName": "resourceGroupPicker",
        "comparison": "isEqualTo"
      },
      "name": "text - 2",
      "styleSettings": {
        "margin": "0"
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "resources\r\n| where ['type'] contains  \"Microsoft.ContainerService\"\r\n| extend ResGroup = strcat('/subscriptions/', subscriptionId, '/resourceGroups/', resourceGroup)\r\n| extend aksSKU = tostring(properties.sku.name)\r\n| extend Subscription = strcat('/subscriptions/', subscriptionId)\r\n| extend Status = case(\r\n    tolower(properties.provisioningState) == \"succeeded\", \"Online\",\r\n    tolower(properties.provisioningState) == \"failed\", \"Failed\",\r\n    tolower(properties.provisioningState) == \"creating\", \"Creating\",\r\n    properties.provisoningState\r\n)\r\n| extend [parameter(tagPrefix)]Managed = iff((tostring(tags) has '\"[parameter(tagPrefix)]Managed\":\"true\"'), \"Yes\", \"No\")\r\n| extend InsightsEnabled = iif((properties.addonProfiles.omsagent.enabled==\"true\"), \"Enabled\", \"Not Enabled\")\r\n| extend InsightLAW = iif((properties.addonProfiles.omsagent.config.logAnalyticsWorkspaceResourceID!=\"\"),split(split(properties.addonProfiles.omsagent.config.logAnalyticsWorkspaceResourceID,\"/\",8)[0],'\"}',0)[0], \"n/a\")\r\n| where [parameter(tagPrefix)]Managed in ({[parameter(tagPrefix)]Managed})\r\n| where resourceGroup in ({resourceGroupPicker})\r\n| where sku.name in ({SKU})\r\n| where location in ({Location})\r\n| where Status in ({ProvisioningState})\r\n| where InsightsEnabled in ({MonitoringInsights})\r\n| project ['Resource'] = ['id'], ['Name'] = name, Subscription, ['Resource group']=ResGroup,\r\n['SKU'] = tostring(sku.name), \r\n['Location'] = location, Status, [parameter(tagPrefix)]Managed, ['Monitoring Insights'] = InsightsEnabled, ['Log Analytics Workspace'] = InsightLAW",
        "size": 0,
        "noDataMessage": "The query returned no results for selected filters",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Status",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Creating",
                    "representation": "1",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "thresholdValue": "Failed",
                    "representation": "4",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "contains",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "Monitoring Insights",
              "formatter": 18,
              "formatOptions": {
                "thresholdsOptions": "icons",
                "thresholdsGrid": [
                  {
                    "operator": "contains",
                    "thresholdValue": "Not",
                    "representation": "2",
                    "text": "{0}{1}"
                  },
                  {
                    "operator": "Default",
                    "thresholdValue": null,
                    "representation": "success",
                    "text": "{0}{1}"
                  }
                ]
              }
            },
            {
              "columnMatch": "InsightLAW",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": null,
                "showIcon": true
              }
            }
          ],
          "sortBy": [
            {
              "itemKey": "$gen_thresholds_Monitoring Insights_8",
              "sortOrder": 1
            }
          ]
        },
        "sortBy": [
          {
            "itemKey": "$gen_thresholds_Monitoring Insights_8",
            "sortOrder": 1
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "resourceGroupPicker",
        "comparison": "isNotEqualTo"
      },
      "name": "query - 11"
    },
    {
      "type": 1,
      "content": {
        "json": "## Azure Kubernetes Services Workloads "
      },
      "name": "text - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "### Workload is only available for AKS where Monitoring Insights is enabled and logs it data to the [parameter(companyName)] Managed Log Analytics Workspace",
        "style": "info"
      },
      "name": "text - 8"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "{LAWorkspace}"
        ],
        "parameters": [
          {
            "id": "c3821d09-cfe8-4411-be66-29b82b8cc96b",
            "version": "KqlParameterItem/1.0",
            "name": "LAWorkspace",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where type == \"microsoft.operationalinsights/workspaces\"\r\n| where (tostring(tags) has ('\"[parameter(tagValuePrefix)]LogAnalytics\"')) or (tostring(tags) has ('\"[parameter(tagValuePrefix)]Monitoring\"'))\r\n| project id",
            "crossComponentResources": [
              "value::all"
            ],
            "isHiddenWhenLocked": true,
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "535800c3-d020-490e-b42d-32878f675895",
            "version": "KqlParameterItem/1.0",
            "name": "timeRange",
            "type": 4,
            "isRequired": true,
            "value": {
              "durationMs": 86400000
            },
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 1209600000
                },
                {
                  "durationMs": 2419200000
                },
                {
                  "durationMs": 2592000000
                },
                {
                  "durationMs": 5184000000
                },
                {
                  "durationMs": 7776000000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "label": "Time Range"
          },
          {
            "id": "89c86fa0-4468-47c1-97de-4a574446808a",
            "version": "KqlParameterItem/1.0",
            "name": "ClusterID",
            "type": 5,
            "isRequired": true,
            "query": "resources\r\n| where ['type'] == \"microsoft.containerservice/managedclusters\"\r\n| extend InsightLAW = iif((properties.addonProfiles.omsagent.config.logAnalyticsWorkspaceResourceID!=\"\"),split(split(properties.addonProfiles.omsagent.config.logAnalyticsWorkspaceResourceID,\"/\",8)[0],'\"}',0)[0], \"n/a\")\r\n| where properties.addonProfiles.omsagent.enabled==\"true\"\r\n| project  id, InsightLAW ",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "defaultValue": "value::1",
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources"
          },
          {
            "id": "a996a520-cd1f-4e66-acb8-8508a4792949",
            "version": "KqlParameterItem/1.0",
            "name": "clusterIdWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "| where ClusterId =~ \"{ClusterID}\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "7bce71ac-88be-4923-839c-353264bc443f",
            "version": "KqlParameterItem/1.0",
            "name": "workloadType",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union isfuzzy=true (KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct ControllerKind ),\r\n( print ControllerKind=\"\" )\r\n| where isempty(ControllerKind) == false\r\n| order by ControllerKind asc",
            "crossComponentResources": [
              "{LAWorkspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "0af195ba-70a7-4a0d-9ccb-bf45b3b15e99",
            "version": "KqlParameterItem/1.0",
            "name": "workloadKindWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "workloadType",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where ControllerKind in ({workloadType})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "55413af5-c27d-41f2-9abf-85663e0d1db0",
            "version": "KqlParameterItem/1.0",
            "name": "namespace",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union isfuzzy=true (KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct Namespace ),\r\n( print Namespace=\"\" )\r\n| where isnotempty(Namespace)",
            "crossComponentResources": [
              "{LAWorkspace}"
            ],
            "value": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "3e371f6a-3a45-4b96-b6e4-d9004d61f8d0",
            "version": "KqlParameterItem/1.0",
            "name": "namespaceWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "namespace",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where Namespace in ({namespace})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "eaa080b7-a559-4357-b161-d8cb2d820310",
            "version": "KqlParameterItem/1.0",
            "name": "podStatus",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union isfuzzy=true (KubePodInventory\r\n{clusterIdWhereClause}\r\n| distinct PodStatus ),\r\n( print PodStatus=\"\" )\r\n| where isnotempty(PodStatus)\r\n| order by PodStatus asc",
            "crossComponentResources": [
              "{LAWorkspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "21572c20-c50f-4f69-894f-8283dbdc4154",
            "version": "KqlParameterItem/1.0",
            "name": "podStatusWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "podStatus",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where PodStatus in ({podStatus})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "ef7eff32-1d55-4ddc-bd3a-8c2f01c5035c",
            "version": "KqlParameterItem/1.0",
            "name": "workloadName",
            "type": 2,
            "query": "union isfuzzy=true (KubePodInventory\r\n{clusterIdWhereClause}\r\n{namespaceWhereClause}\r\n{workloadKindWhereClause}\r\n| distinct ControllerName),\r\n( print ControllerName=\"\" )\r\n| where isnotempty(ControllerName)",
            "crossComponentResources": [
              "{LAWorkspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::1"
              ],
              "showDefault": false
            },
            "defaultValue": "value::1",
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "ec96cbda-639a-43ba-809b-e1f3364958b0",
            "version": "KqlParameterItem/1.0",
            "name": "podName",
            "type": 2,
            "multiSelect": true,
            "quote": "'",
            "delimiter": ",",
            "query": "union isfuzzy=true (KubePodInventory\r\n{clusterIdWhereClause}\r\n| where ControllerName == '{workloadName:value}'\r\n{podStatusWhereClause}\r\n| summarize arg_max(TimeGenerated, PodStatus) by Name\r\n| project Name),\r\n( print Name=\"\" )\r\n| where isempty(Name) == false\r\n| order by Name asc\r\n",
            "crossComponentResources": [
              "{LAWorkspace}"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "1591036e-2ff4-474b-82d9-4fd6073a70be",
            "version": "KqlParameterItem/1.0",
            "name": "podNameWhereClause",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "podName",
                  "operator": "isNotNull",
                  "rightValType": "param",
                  "resultValType": "static",
                  "resultVal": "| where PodName in ({podName})"
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "| where \"a\" == \"a\""
                }
              }
            ]
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "name": "parameters - 1"
    },
    {
      "type": 1,
      "content": {
        "json": "\r\n### Azure Kubernetes Service: {ClusterID:name}"
      },
      "conditionalVisibility": {
        "parameterName": "namespace",
        "comparison": "isNotEqualTo"
      },
      "name": "text - 10"
    },
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "b8fd4225-b631-4c65-ad5b-e32389191b91",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Overview",
            "subTarget": "Overview",
            "style": "link"
          },
          {
            "id": "b8707393-dfe7-4d2d-8362-a379e54b888e",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Pod/Container Status",
            "subTarget": "Status",
            "preText": "Pod/Container Status",
            "postText": "Pod/Container Status",
            "style": "link"
          },
          {
            "id": "21230203-ad09-4d9e-877b-7764e92e85e3",
            "cellValue": "selectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Kube Events",
            "subTarget": "events",
            "style": "link"
          }
        ]
      },
      "name": "links - 0"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'cpuLimitNanoCores';\r\nlet usageCounterName = 'cpuUsageNanoCores';\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in  (controllerName)\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue, limitA=100\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, limit=100, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project  ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue \r\n| summarize AggregatedValue=max(UsagePercent) by bin(TimeGenerated, trendBinSize), ContainerName",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Max CPU Usage by Pods",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "timechart"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Overview"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "pod-max-cpu-usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'memoryLimitBytes';\r\nlet usageCounterName = 'memoryWorkingSetBytes';\r\nlet controllerName= '{workloadName}';\r\nKubePodInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName in  (controllerName)\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n         ContainerName = strcat(controllerName, '/', tostring(split(ContainerName, '/')[1])),\r\n         PodName=Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| distinct Computer, InstanceName, ContainerName\r\n| join hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime\r\n    | where TimeGenerated >= startDateTime\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == capacityCounterName\r\n    | summarize LimitValue = max(CounterValue) by Computer, InstanceName, bin(TimeGenerated, trendBinSize)\r\n    | project Computer, InstanceName, LimitStartTime = TimeGenerated, LimitEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer, InstanceName\r\n| join kind=inner hint.strategy=shuffle (\r\n    Perf\r\n    | where TimeGenerated < endDateTime + trendBinSize\r\n    | where TimeGenerated >= startDateTime - trendBinSize\r\n    | where ObjectName == 'K8SContainer'\r\n    | where CounterName == usageCounterName\r\n    | project Computer, InstanceName, UsageValue = CounterValue, TimeGenerated\r\n) on Computer, InstanceName\r\n| where TimeGenerated >= LimitStartTime and TimeGenerated < LimitEndTime\r\n| project Computer, ContainerName, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue\r\n| summarize AggregatedValue = max(UsagePercent) by bin(TimeGenerated, trendBinSize) , ContainerName\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Max Memory Usage ( Working Set ) by Pods",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "timechart"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Overview"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "pod-max-memory-usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'cpuCapacityNanoCores';\r\nlet usageCounterName = 'cpuUsageNanoCores';\r\nKubeNodeInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n// cluster filter would go here if multiple clusters are reporting to the same Log Analytics workspace\r\n{clusterIdWhereClause}\r\n| distinct ClusterName, Computer, _ResourceId\r\n| join hint.strategy=shuffle (\r\n  Perf\r\n  | where TimeGenerated < endDateTime\r\n  | where TimeGenerated >= startDateTime\r\n  | where ObjectName == 'K8SNode'\r\n  | where CounterName == capacityCounterName\r\n  | summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)\r\n  | project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer\r\n| join kind=inner hint.strategy=shuffle (\r\n  Perf\r\n  | where TimeGenerated < endDateTime + trendBinSize\r\n  | where TimeGenerated >= startDateTime - trendBinSize\r\n  | where ObjectName == 'K8SNode'\r\n  | where CounterName == usageCounterName\r\n  | project Computer, UsageValue = CounterValue, TimeGenerated\r\n) on Computer\r\n| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime\r\n| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue, _ResourceId\r\n| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), Computer",
              "size": 0,
              "aggregation": 2,
              "showAnalytics": true,
              "title": "Average CPU usage by Nodes",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "areachart"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Overview"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "node-cpu-usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet capacityCounterName = 'memoryCapacityBytes';\r\nlet usageCounterName = 'memoryRssBytes';\r\nKubeNodeInventory\r\n| where TimeGenerated < endDateTime\r\n| where TimeGenerated >= startDateTime\r\n// cluster filter would go here if multiple clusters are reporting to the same Log Analytics workspace\r\n{clusterIdWhereClause}\r\n| distinct ClusterName, Computer, _ResourceId\r\n| join hint.strategy=shuffle (\r\n  Perf\r\n  | where TimeGenerated < endDateTime\r\n  | where TimeGenerated >= startDateTime\r\n  | where ObjectName == 'K8SNode'\r\n  | where CounterName == capacityCounterName\r\n  | summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize)\r\n  | project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue\r\n) on Computer\r\n| join kind=inner hint.strategy=shuffle (\r\n  Perf\r\n  | where TimeGenerated < endDateTime + trendBinSize\r\n  | where TimeGenerated >= startDateTime - trendBinSize\r\n  | where ObjectName == 'K8SNode'\r\n  | where CounterName == usageCounterName\r\n  | project Computer, UsageValue = CounterValue, TimeGenerated\r\n) on Computer\r\n| where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime\r\n| project ClusterName, Computer, TimeGenerated, UsagePercent = UsageValue * 100.0 / LimitValue, _ResourceId\r\n| summarize AggregatedValue = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), Computer",
              "size": 0,
              "showAnalytics": true,
              "title": "Average memory usage by Nodes",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "areachart"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Overview"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "node-memory-usage",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "InsightsMetrics\r\n| where Name == \"used_percent\" and Namespace == \"container.azm.ms/disk\" \r\n| summarize val= max(Val) by bin(TimeGenerated, 15m), _ResourceId\r\n| render timechart",
              "size": 0,
              "title": "Node disk usage",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ]
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "namespace",
              "comparison": "isNotEqualTo"
            },
            "name": "Node disk usage"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Overview"
      },
      "name": "Overview-tab",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet trendBinSize = 10m;\r\nKubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName == controllerName\r\n| join (\r\n    KubeEvents \r\n    | project KubeEventType, Name\r\n    )\r\n    on Name\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| summarize count() by KubeEventType ",
              "size": 4,
              "showAnalytics": true,
              "title": "Kube events",
              "noDataMessage": "There are no Kube Events to display",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "KubeEventType",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "events"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "event-types"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet trendBinSize = 10m;\r\nKubePodInventory\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerName == controllerName\r\n| join (\r\nKubeEvents\r\n| project Reason, Name\r\n) on Name\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| where \"a\" == \"a\"\r\n| summarize count() by Reason \r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Event Reasons",
              "noDataMessage": "There are no Event Reasons to display",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "50",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "events"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "event-reasons",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nlet controllerName= '{workloadName:value}';\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| join (KubeEvents\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime)\r\non Name, $left.Name == $right.Name\r\n| where ControllerName == controllerName\r\n| extend Priority = iif(isempty(Computer), 1, 0)\r\n| order by Priority desc, TimeGenerated desc\r\n| project TimeGenerated=TimeGenerated1, KubeEventType, PodName=Name,Reason, EventMessage=Message, NodeName=Computer\r\n",
              "size": 0,
              "showAnalytics": true,
              "title": "Controller Kube Events",
              "noDataMessage": "There are no Controller Kube Events to display",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "table"
            },
            "customWidth": "90",
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "events"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "showPin": true,
            "name": "controller-kube-events-grid"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "events"
      },
      "name": "Kube-events",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let controllerName= '{workloadName}';\r\nlet endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| where ControllerName == controllerName\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| summarize PodStatus = any(PodStatus) by PodName, TimeGenerated\r\n| make-series Trend = dcount(PodName) default=0 on TimeGenerated from {timeRange:start} to {timeRange:end} step trendBinSize by PodStatus\r\n| extend PodCount=Trend[(arraylength(Trend)-1)]",
              "size": 3,
              "noDataMessage": "There is no POD status to display",
              "timeContext": {
                "durationMs": 86400000
              },
              "exportToExcelOptions": "all",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "tiles",
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "PodStatus",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "PodStatus",
                  "formatter": 18,
                  "formatOptions": {
                    "thresholdsOptions": "icons",
                    "thresholdsGrid": [
                      {
                        "operator": "Default",
                        "thresholdValue": null,
                        "representation": "success",
                        "text": "{0}{1}"
                      }
                    ]
                  }
                },
                "rightContent": {
                  "columnMatch": "PodCount",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "blue"
                  }
                },
                "secondaryContent": {
                  "columnMatch": "Trend",
                  "formatter": 9,
                  "formatOptions": {
                    "palette": "blue"
                  }
                },
                "showBorder": true
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Status"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "query - 1"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let endDateTime = {timeRange:end};\r\nlet startDateTime = {timeRange:start};\r\nlet trendBinSize = {timeRange:grain};\r\nKubePodInventory\r\n| where TimeGenerated >= startDateTime\r\n| where TimeGenerated < endDateTime\r\n{clusterIdWhereClause}\r\n{workloadKindWhereClause}\r\n{namespaceWhereClause}\r\n| where ControllerKind in ('DaemonSet', 'ReplicaSet')\r\n| where isnotempty(ClusterName)\r\n| where isnotempty(Namespace)\r\n| extend PodName = Name\r\n{podStatusWhereClause}\r\n{podNameWhereClause}\r\n| extend InstanceName = strcat(ClusterId, '/', ContainerName),\r\n    ContainerName = strcat(Name, '/', tostring(split(ContainerName, '/')[1]))\r\n| summarize arg_max(TimeGenerated, *) by ContainerName, Name\r\n| extend ContainerLastStatus = todynamic(ContainerLastStatus) \r\n| project TimeGenerated, ContainerName, PodStatus, ContainerStatus, Namespace, LastState=ContainerLastStatus.lastState, LastStateReason=ContainerLastStatus.reason, LastStateStartTime=ContainerLastStatus.startedAt,\r\n    LastStateFinishTime=ContainerLastStatus.finishedAt",
              "size": 0,
              "noDataMessage": "There is no Container Status to display",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{LAWorkspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "PodStatus",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Running",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "2",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "conditionalVisibilities": [
              {
                "parameterName": "selectedTab",
                "comparison": "isEqualTo",
                "value": "Status"
              },
              {
                "parameterName": "namespace",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "pod-container-status"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "selectedTab",
        "comparison": "isEqualTo",
        "value": "Status"
      },
      "name": "pod-container-status-tab"
    },
    {
      "type": 1,
      "content": {
        "json": "### Azure Kubernetes Service: No AKS found that has Insights enabled and logs its data to {LAWorkspace:name}",
        "style": "warning"
      },
      "conditionalVisibility": {
        "parameterName": "namespace",
        "comparison": "isEqualTo"
      },
      "name": "text - 10"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}