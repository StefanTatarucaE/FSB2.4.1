{
    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
    "actions": {
        "API_Call_-_Retrieve_Function_Secret": {
            "description": "Get the listerner function primary key, to be able to call the function later",
            "inputs": {
                "authentication": {
                    "audience": "https://management.azure.com",
                    "type": "ManagedServiceIdentity"
                },
                "headers": {
                    "Content-Type": "application/json"
                },
                "method": "POST",
                "queries": {
                    "api-version": "2019-08-01"
                },
                "uri": "https://management.azure.com@{parameters('ListenerFunctionResourceID')}/listKeys"
            },
            "runAfter": {
                "Initialize_variable_-_ResourceGroup": [
                    "Succeeded"
                ]
            },
            "runtimeConfiguration": {
                "secureData": {
                    "properties": [
                        "outputs"
                    ]
                }
            },
            "type": "Http"
        },
        "Compose_JSON_from_HTTP_request_body": {
            "inputs": {
                "data": {
                    "alertContext": "@triggerBody()?['data']?['alertContext']",
                    "essentials": "@triggerBody()?['data']?['essentials']"
                }
            },
            "runAfter": {},
            "type": "Compose"
        },
        "Condition_-_Cancel_if_alert_message_is_for_resolved_condition": {
            "actions": {
                "Terminate_on_Resolved_alert_condition": {
                    "inputs": {
                        "runStatus": "Cancelled"
                    },
                    "runAfter": {},
                    "type": "Terminate"
                }
            },
            "expression": {
                "and": [
                    {
                        "not": {
                            "equals": [
                                "@body('parse_Alert_JSON')?['data']['essentials']['monitorCondition']",
                                "@null"
                            ]
                        }
                    },
                    {
                        "equals": [
                            "@toLower(body('parse_Alert_JSON')?['data']['essentials']['monitorCondition'])",
                            "@toLower('Resolved')"
                        ]
                    }
                ]
            },
            "runAfter": {
                "Parse_Alert_JSON": [
                    "Succeeded"
                ]
            },
            "type": "If"
        },
        "Evaluate_Alert_Source_type": {
            "cases": {
                "Alert_type_-_COST_ALERTS": {
                    "actions": {
                        "Condition_-_if_not_skipped,_send_alert_to_SNOW_(Cost_Alerts)": {
                            "actions": {
                                "API_Call_-_Call_Event_Listener_function_-_COST_ALERTS": {
                                    "inputs": {
                                        "body": "@outputs('Compose_-_EventJSON_-_Cost_Alerts')",
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "x-functions-key": "@variables('FunctionAPIKey')"
                                        },
                                        "method": "POST",
                                        "retryPolicy": {
                                            "count": 10,
                                            "interval": "PT30S",
                                            "maximumInterval": "PT2M",
                                            "minimumInterval": "PT30S",
                                            "type": "exponential"
                                        },
                                        "uri": "@{parameters('ListenerFunctionUrl')}"
                                    },
                                    "runAfter": {
                                        "Compose_-_EventJSON_-_Cost_Alerts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    },
                                    "type": "Http"
                                },
                                "Append_to_EventMessageText_-_CostAlert_Description": {
                                    "inputs": {
                                        "name": "EventMessageText",
                                        "value": "Microsoft Azure Cost alert@{variables('CRLF')}@{body('parse_Alert_JSON')['data']['essentials']['description']}@{variables('CRLF')}BudgetId: @{body('parse_Alert_JSON')?['data']?['alertContext']?['AlertData']?['BudgetId']}"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                },
                                "Compose_-_EventJSON_-_Cost_Alerts": {
                                    "inputs": {
                                        "dateTimeOccured": "@{body('parse_Alert_JSON')['data']['essentials']['firedDateTime']}",
                                        "eventCategory": "@{variables('SNOWCategories')}",
                                        "eventMessageText": "@{variables('EventMessageText')}@{variables('CRLF')} -@{variables('CRLF')}",
                                        "eventSeverity": "warning",
                                        "eventType": "@{variables('EventType')}",
                                        "forcedMonitoringId": "@{variables('ForcedConfigItemID')}",
                                        "genericCIMonitoringId": "@{variables('GenericConfigItemID')}",
                                        "payloadtype": "itsm-event",
                                        "resourceid": "",
                                        "targetsnowenv": "@{variables('SNOWEnvironmentCode')}",
                                        "targetsnowfo": "@{variables('SNOWTenantCode')}"
                                    },
                                    "runAfter": {
                                        "Condition_-_is_subscription_targeted_(CostAlerts)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                },
                                "Condition_-_is_subscription_targeted_(CostAlerts)": {
                                    "actions": {
                                        "API_call_-_Get_subscription_data_(CostAlerts)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2020-01-01"
                                                },
                                                "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SubscriptionID_(CostAlerts)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "If_SNOW_CAT_overide_tag_is_present_at_subscription_level_set_new_CAT_(CA)": {
                                            "actions": {
                                                "Set_new_CAT_for_SNOW_(CA)": {
                                                    "inputs": {
                                                        "name": "SNOWCategories",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(CostAlerts)')['tags'][parameters('SnowCatOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                            "@parameters('SnowCatOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(CA)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_ENV_overide_tag_at_subscription_level_set_new_ENV_(CA)": {
                                            "actions": {
                                                "Set_new_ENV_for_SNOW_(Cost_Alerts)": {
                                                    "inputs": {
                                                        "name": "SNOWEnvironmentCode",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']?[parameters('SnowEnvOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                            "@parameters('SnowEnvOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "API_call_-_Get_subscription_data_(CostAlerts)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(CA)": {
                                            "actions": {
                                                "Set_new_FO_for_SNOW_(CA)": {
                                                    "inputs": {
                                                        "name": "SNOWTenantCode",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(CostAlerts)')['tags'][parameters('SnowFoOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                            "@parameters('SnowFoOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_ENV_overide_tag_at_subscription_level_set_new_ENV_(CA)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(CA)": {
                                            "actions": {
                                                "Set_new_GenericConfigItemID_for_SNOW_(CostAlerts)": {
                                                    "inputs": {
                                                        "name": "GenericConfigItemID",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']?[parameters('SnowGenericCiOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(CostAlerts)')?['tags']",
                                                            "@parameters('SnowGenericCiOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(CA)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_variable_-_SubscriptionID_(CostAlerts)": {
                                            "inputs": {
                                                "name": "SubscriptionID",
                                                "value": "@{split(body('Parse_Alert_JSON')?['data']?['alertContext']?['AlertData']?['BudgetId'], '/')[2]}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('Parse_Alert_JSON')?['data']?['alertContext']?['AlertData']?['BudgetId']",
                                                        "@null"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Append_to_EventMessageText_-_CostAlert_Description": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('SkipAlert')",
                                            false
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@length( intersection( split(replace(parameters('SnowCategoriesSkipped'), ' ', ''), ','), createArray(variables('SNOWCategories')) ))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "If"
                        }
                    },
                    "case": "CostAlerts"
                },
                "Alert_type_-_LOG_ALERTS_V2": {
                    "actions": {
                        "Process_each_allOf_from_condition": {
                            "actions": {
                                "API_Call_-_Retrieve_Alert_Data_for_LOG_V2": {
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://api.loganalytics.io",
                                            "type": "ManagedServiceIdentity"
                                        },
                                        "method": "GET",
                                        "uri": "@{items('Process_each_allOf_from_condition')?['linkToSearchResultsAPI']}"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                },
                                "v2_Process_each_search_result_ROW_and_create_incident": {
                                    "actions": {
                                        "v2_LOOP_-_ROWS": {
                                            "actions": {
                                                "V2_Condition_-_Check_administrative_disabled_alert": {
                                                    "actions": {
                                                        "API_CALL_-_Enable_disabled_alert_rule": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "body": {
                                                                    "properties": {
                                                                        "enabled": true
                                                                    }
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "PATCH",
                                                                "queries": {
                                                                    "api-version": "2021-08-01"
                                                                },
                                                                "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}/resourceGroups/@{variables('ResourceGroup')}/providers/Microsoft.Insights/scheduledQueryRules/@{variables('DisabledAlertName')}"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_set_skipAlert_to_true": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Set_variable_-_DisabledAlertName": {
                                                            "inputs": {
                                                                "name": "DisabledAlertName",
                                                                "value": "@{replace(split(variables('ResourceId'),'/')[8],' ','%20')}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        },
                                                        "Set_variable_-_ResourceGroup": {
                                                            "inputs": {
                                                                "name": "ResourceGroup",
                                                                "value": "@{split(variables('ResourceId'),'/')[4]}"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_DisabledAlertName": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        },
                                                        "Set_variable_-_set_skipAlert_to_true": {
                                                            "inputs": {
                                                                "name": "SkipAlert",
                                                                "value": true
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_ResourceGroup": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('DisabledAlert')",
                                                                    "@bool(true)"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Cond_-_SKIP_alert_if_resourceData_is_not_available_(or_Tags_not_compliant)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "V2_Condition_-_Set_variable_for_disabled_alert_rule": {
                                                    "actions": {
                                                        "Set_variable_-_DisabledAlert_to_True": {
                                                            "inputs": {
                                                                "name": "DisabledAlert",
                                                                "value": "@bool(true)"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Set_variable_-_DisableAlert_to_False": {
                                                                "inputs": {
                                                                    "name": "DisabledAlert",
                                                                    "value": "@bool(false)"
                                                                },
                                                                "runAfter": {},
                                                                "type": "SetVariable"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('EventMessageText')",
                                                                    "@string('Azure Monitor alert disabled')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_SNOWTenantCode_(LA)_to_default": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Cond_-_SKIP_alert_if_resourceData_is_not_available_(or_Tags_not_compliant)": {
                                                    "actions": {
                                                        "v2_Set_variable_-_SkipAlert_=_true_(resourceid_not_found)": {
                                                            "inputs": {
                                                                "name": "SkipAlert",
                                                                "value": true
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "v2_Condition_-_Check_if_service_provider_TAG_is_present": {
                                                                "actions": {
                                                                    "v2_Condition_-_skip_if_Maintenance_tag_is_set_(LA)": {
                                                                        "actions": {
                                                                            "v2_Set_variable_SkipAlert=true_(Maintenance_tag,_LA)": {
                                                                                "inputs": {
                                                                                    "name": "SkipAlert",
                                                                                    "value": true
                                                                                },
                                                                                "runAfter": {},
                                                                                "type": "SetVariable"
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "contains": [
                                                                                        "@toLower(string(variables('ResourceData')['tags']))",
                                                                                        "@concat('\"',parameters('ServiceProviderMaintenanceTag'),'\":\"true\"')"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "If"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "v2_Skip_if_ResourceID_exist,_but_no_tag_found": {
                                                                            "actions": {
                                                                                "v2_Condition_-_skip_only_for_resources_that_do_support_tags_(LA)": {
                                                                                    "actions": {
                                                                                        "v2_Set_variable_-_SkipAlert_=_true_(managed_tag_not_found)": {
                                                                                            "inputs": {
                                                                                                "name": "SkipAlert",
                                                                                                "value": true
                                                                                            },
                                                                                            "runAfter": {},
                                                                                            "type": "SetVariable"
                                                                                        }
                                                                                    },
                                                                                    "expression": {
                                                                                        "and": [
                                                                                            {
                                                                                                "not": {
                                                                                                    "equals": [
                                                                                                        "@toLower(variables('ResourceData')['type'])",
                                                                                                        "@toLower('microsoft.authorization/policyassignments')"
                                                                                                    ]
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    "runAfter": {},
                                                                                    "type": "If"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "not": {
                                                                                            "equals": [
                                                                                                "@variables('ResourceID')",
                                                                                                "@trim('')"
                                                                                            ]
                                                                                        }
                                                                                    },
                                                                                    {
                                                                                        "not": {
                                                                                            "equals": [
                                                                                                "@parameters('ServiceProviderManagedTag')",
                                                                                                "@trim('')"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "If"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "not": {
                                                                                "equals": [
                                                                                    "@variables('ResourceData')",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        },
                                                                        {
                                                                            "contains": [
                                                                                "@variables('ResourceData')",
                                                                                "tags"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "contains": [
                                                                                "@variables('ResourceData')['tags']",
                                                                                "@parameters('ServiceProviderManagedTag')"
                                                                            ]
                                                                        },
                                                                        {
                                                                            "not": {
                                                                                "equals": [
                                                                                    "@toLower(trim(variables('ResourceData')['tags'][parameters('ServiceProviderManagedTag')]))",
                                                                                    false
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "runAfter": {},
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceID')",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "equals": [
                                                                    "@variables('ResourceData')",
                                                                    "@null"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_LOOP_-_COLUMNS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_Get_Monitoring_ConfigItemID__from_tag_if_present": {
                                                    "actions": {
                                                        "v2_Condition_-_Check_if_specific_monitoring_CI_TAG_is_present": {
                                                            "actions": {
                                                                "v2_Set_variable_-_ForcedConfigItemID_to_specified_ID_from_tag": {
                                                                    "inputs": {
                                                                        "name": "ForcedConfigItemID",
                                                                        "value": "@{trim(variables('ResourceData')['tags'][parameters('ServiceProviderMonitoringCITag')])}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@variables('ResourceData')",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@variables('ResourceData')",
                                                                            "tags"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@variables('ResourceData')['tags']",
                                                                            "@parameters('ServiceProviderMonitoringCITag')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceID')",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceData')",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Condition_-_If_resource_=_VM": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_If_resource_=_VM": {
                                                    "actions": {
                                                        "v2_Condition_-_append_var_SNOWCategories_with_osType_(Windows,_Linux)": {
                                                            "actions": {
                                                                "v2_append_OS_type_to_alert_of_type_Antimalware": {
                                                                    "actions": {
                                                                        "v2_append_variable_-_SNOWCategories_+=_osType_(LA)_(ANTIMALWARE)": {
                                                                            "inputs": {
                                                                                "name": "SNOWCategories",
                                                                                "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "AppendToStringVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('SNOWCategories')",
                                                                                    "Cloud.IaaS.DCS-Azure-Antimalware"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_append_OS_type_to_alert_of_type_Azure-OS": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "v2_append_OS_type_to_alert_of_type_Azure-OS": {
                                                                    "actions": {
                                                                        "v2_append_variable_-_SNOWCategories_+=_osType_(LA)": {
                                                                            "inputs": {
                                                                                "name": "SNOWCategories",
                                                                                "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "AppendToStringVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('SNOWCategories')",
                                                                                    "Cloud.IaaS.DCS-Azure-OS"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "or": [
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                                    "Windows"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "equals": [
                                                                                    "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                                    "Linux"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        },
                                                        "v2_Condition_-_if_VM_is_part_of_a_scaleset,_set_ResourceId": {
                                                            "actions": {
                                                                "v2_Set_variable_-_ResourceId_(1)": {
                                                                    "inputs": {
                                                                        "name": "ResourceID",
                                                                        "value": "@variables('ScaleSetResourceID')"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Set_variable_-_ScaleSetResourceID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                },
                                                                "v2_Set_variable_-_ScaleSetResourceID": {
                                                                    "inputs": {
                                                                        "name": "ScaleSetResourceID",
                                                                        "value": "@{split(variables('ResourceID'),'/virtualmachines/')[0]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@variables('ResourceID')",
                                                                            "/providers/microsoft.compute/virtualmachinescalesets/"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_append_var_SNOWCategories_with_osType_(Windows,_Linux)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "or": [
                                                                    {
                                                                        "contains": [
                                                                            "@variables('ResourceID')",
                                                                            "/providers/microsoft.compute/virtualmachines/"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@variables('ResourceID')",
                                                                            "/providers/microsoft.compute/virtualmachinescalesets/"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceData')",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Condition_-_Set_variable_EventType_(LA)_from_alert_description": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_If_the_SubscriptionID_is_known,_check_SNOW_environment_config": {
                                                    "actions": {
                                                        "v2_Determine_SNOW_target_ENV_(LA)": {
                                                            "actions": {
                                                                "v2_API_CALL_-_Get_subscription_data_(LA)": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "headers": {
                                                                            "Content-Type": "application/json"
                                                                        },
                                                                        "method": "GET",
                                                                        "queries": {
                                                                            "api-version": "2020-01-01"
                                                                        },
                                                                        "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "Http"
                                                                },
                                                                "v2_If_SNOW_CAT_overide_tag_is_present_at_subscription_level_set_new_CAT_(LA)": {
                                                                    "actions": {
                                                                        "v2_Set_new_CAT_for_SNOW_(LA)": {
                                                                            "inputs": {
                                                                                "name": "SNOWCategories",
                                                                                "value": "@{body('v2_API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowCatOverideTag')]}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "SetVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')",
                                                                                    "tags"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                    "@parameters('SnowCatOverideTag')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_If_SNOW_GenericCI_overide_tag_set_at_subscription_level_set_new_ConfigID_(LA)": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "v2_If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(LA)": {
                                                                    "actions": {
                                                                        "v2_Set_new_ENV_for_SNOW_(LA)": {
                                                                            "inputs": {
                                                                                "name": "SNOWEnvironmentCode",
                                                                                "value": "@{body('v2_API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowEnvOverideTag')]}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "SetVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')",
                                                                                    "tags"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                    "@parameters('SnowEnvOverideTag')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_CALL_-_Get_subscription_data_(LA)": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "v2_If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(LA)": {
                                                                    "actions": {
                                                                        "v2_Set_new_FO_for_SNOW_(LA)": {
                                                                            "inputs": {
                                                                                "name": "SNOWTenantCode",
                                                                                "value": "@{body('v2_API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowFoOverideTag')]}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "SetVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')",
                                                                                    "tags"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                    "@parameters('SnowFoOverideTag')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(LA)": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "v2_If_SNOW_GenericCI_overide_tag_set_at_subscription_level_set_new_ConfigID_(LA)": {
                                                                    "actions": {
                                                                        "v2_Set_new_GenericConfigItemID_for_SNOW_(LA)": {
                                                                            "inputs": {
                                                                                "name": "GenericConfigItemID",
                                                                                "value": "@{body('v2_API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowGenericCiOverideTag')]}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "SetVariable"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')",
                                                                                    "tags"
                                                                                ]
                                                                            },
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                        "@null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "contains": [
                                                                                    "@body('v2_API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                    "@parameters('SnowGenericCiOverideTag')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(LA)": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "type": "Scope"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('SubscriptionID')",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "V2_Condition_-_Check_administrative_disabled_alert": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_Set_variable_EventType_(LA)_from_alert_description": {
                                                    "actions": {
                                                        "v2_Condition_-_Check_if_EvenType_=_AVAILABILITY_is_specified": {
                                                            "actions": {
                                                                "v2_Set_variable_-_EventType_=_AVAILABILITY": {
                                                                    "inputs": {
                                                                        "name": "EventType",
                                                                        "value": "AVAILABILITY"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "startsWith": [
                                                                            "@trim(split(replace(toLower(body('Parse_Alert_JSON')['data']['essentials']['description']),'event type', 'eventtype'),string('eventtype'))[1])",
                                                                            "availability"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_Check_if_EvenType_=_PERFORMANCE_is_specified": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "v2_Condition_-_Check_if_EvenType_=_PERFORMANCE_is_specified": {
                                                            "actions": {
                                                                "v2_Set_variable_-_EventType_=_PERFORMANCE": {
                                                                    "inputs": {
                                                                        "name": "EventType",
                                                                        "value": "PERFORMANCE"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "startsWith": [
                                                                            "@trim(split(replace(toLower(body('Parse_Alert_JSON')['data']['essentials']['description']),'event type', 'eventtype'),string('eventtype'))[1])",
                                                                            "performance"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        }
                                                    },
                                                    "description": "eventype can be specified in the alert description after the keyword 'EventType', it can be 'PERFORMANCE' or 'AVAILABILITY'. Otherwise the default is used.",
                                                    "expression": {
                                                        "or": [
                                                            {
                                                                "contains": [
                                                                    "@toLower(body('parse_Alert_JSON')['data']['essentials']['description'])",
                                                                    "@string('eventtype')"
                                                                ]
                                                            },
                                                            {
                                                                "contains": [
                                                                    "@toLower(body('parse_Alert_JSON')['data']['essentials']['description'])",
                                                                    "@string('event type')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Condition_-_Set_variable_SNOWCategories_(LA)_from_alert_description": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_Set_variable_SNOWCategories_(LA)_from_alert_description": {
                                                    "actions": {
                                                        "v2_Set_variable_-_SNOWCategories_(LA)_=_triplet_from_alert_description": {
                                                            "inputs": {
                                                                "name": "SNOWCategories",
                                                                "value": "@{split(body('parse_Alert_JSON')['data']['essentials']['description'], string(' - '))[0]}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "description": "1st string of the alert description is considered to be ServiceNow category triplet if it is seperated from the rest of the description by ' - ' (space-dash-space) and contains 1 or 2 dots, but does not contain a space or ends with dot.",
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@body('parse_Alert_JSON')['data']['essentials']['description']",
                                                                    "@string(' - ')"
                                                                ]
                                                            },
                                                            {
                                                                "greater": [
                                                                    "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                                    1
                                                                ]
                                                            },
                                                            {
                                                                "lessOrEquals": [
                                                                    "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                                    3
                                                                ]
                                                            },
                                                            {
                                                                "not": {
                                                                    "contains": [
                                                                        "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                                        "@string(' ')"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "not": {
                                                                    "endsWith": [
                                                                        "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                                        "@string('.')"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Condition_-_If_the_SubscriptionID_is_known,_check_SNOW_environment_config": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_Condition_-_if_not_skipped,_Send_alert_to_SNOW": {
                                                    "actions": {
                                                        "v2_API_Call_-_Call_Event_Listener_function_-_LOG_ALERTS_V2": {
                                                            "inputs": {
                                                                "body": "@outputs('v2_Compose_-_EventJSON_-_Log_Analytics')",
                                                                "headers": {
                                                                    "Content-Type": "application/json",
                                                                    "x-functions-key": "@variables('FunctionAPIKey')"
                                                                },
                                                                "method": "POST",
                                                                "retryPolicy": {
                                                                    "count": 10,
                                                                    "interval": "PT30S",
                                                                    "maximumInterval": "PT2M",
                                                                    "minimumInterval": "PT30S",
                                                                    "type": "exponential"
                                                                },
                                                                "uri": "@{parameters('ListenerFunctionUrl')}"
                                                            },
                                                            "runAfter": {
                                                                "v2_Compose_-_EventJSON_-_Log_Analytics": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "runtimeConfiguration": {
                                                                "secureData": {
                                                                    "properties": [
                                                                        "inputs"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "v2_Compose_-_EventJSON_-_Log_Analytics": {
                                                            "inputs": {
                                                                "dateTimeOccured": "@{body('parse_Alert_JSON')['data']['essentials']['firedDateTime']}",
                                                                "eventCategory": "@{variables('SNOWCategories')}",
                                                                "eventMessageText": "Alert UID [@{variables('AlertHash')}]@{variables('CRLF')} @{variables('EventMessageText')} -@{variables('CRLF')}",
                                                                "eventSeverity": "@{variables('SeverityMapping')[body('parse_Alert_JSON')?['data']['essentials']['severity']]}",
                                                                "eventType": "@{variables('EventType')}",
                                                                "forcedMonitoringId": "@{variables('ForcedConfigItemID')}",
                                                                "genericCIMonitoringId": "@{variables('GenericConfigItemID')}",
                                                                "payloadtype": "itsm-event",
                                                                "resourceid": "@{variables('ResourceID')}",
                                                                "targetsnowenv": "@{variables('SNOWEnvironmentCode')}",
                                                                "targetsnowfo": "@{variables('SNOWTenantCode')}"
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_If_alert_hash_doest_not_exist,_generate_it": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose"
                                                        },
                                                        "v2_Condition_-_If_alert_hash_doest_not_exist,_generate_it": {
                                                            "actions": {
                                                                "v2_API_Call_-_Calculate_template_hash": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "body": {
                                                                            "$schema": "http://schemas.management.azure.com/deploymentTemplate?api-version=2014-04-01-preview",
                                                                            "contentVersion": "1.0.0.0",
                                                                            "parameters": {
                                                                                "@{base64(variables('EventMessageText'))}": {
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "resources": []
                                                                        },
                                                                        "method": "POST",
                                                                        "queries": {
                                                                            "api-version": "2020-06-01"
                                                                        },
                                                                        "uri": "https://management.azure.com/providers/Microsoft.Resources/calculateTemplateHash"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "Http"
                                                                },
                                                                "v2_Set_variable_-_AlertHash_(from_API)": {
                                                                    "inputs": {
                                                                        "name": "AlertHash",
                                                                        "value": "@{body('v2_API_Call_-_Calculate_template_hash')?['templateHash']}"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_Call_-_Calculate_template_hash": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('AlertHash')",
                                                                            "NULL"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        },
                                                        "v2_Set_variable_-_OUTPUT_SENTALERT": {
                                                            "inputs": {
                                                                "name": "OUTPUT_SENTALERT",
                                                                "value": "@{body('parse_Alert_JSON')['data']['essentials']['alertRule']}"
                                                            },
                                                            "runAfter": {
                                                                "v2_API_Call_-_Call_Event_Listener_function_-_LOG_ALERTS_V2": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('SkipAlert')",
                                                                    false
                                                                ]
                                                            },
                                                            {
                                                                "equals": [
                                                                    "@length( intersection( split(replace(parameters('SnowCategoriesSkipped'), ' ', ''), ','), createArray(variables('SNOWCategories')) ))",
                                                                    0
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "v2_Condition_-_Get_Monitoring_ConfigItemID__from_tag_if_present": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "v2_LOOP_-_COLUMNS": {
                                                    "actions": {
                                                        "v2_Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA": {
                                                            "actions": {
                                                                "v2_API_Call_-_Get_generic_resource_data": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "headers": {
                                                                            "Content-Type": "application/json"
                                                                        },
                                                                        "method": "GET",
                                                                        "queries": {
                                                                            "api-version": "@{body('v2_Filter_array_-_Provider_resource_type')[0]['apiVersions'][0]}"
                                                                        },
                                                                        "uri": "https://management.azure.com@{variables('ResourceID')}"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Filter_array_-_Provider_resource_type": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Http"
                                                                },
                                                                "v2_API_Call_-_Get_resource_provider_information": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "headers": {
                                                                            "Content-Type": "application/json"
                                                                        },
                                                                        "method": "GET",
                                                                        "queries": {
                                                                            "api-version": "2015-01-01"
                                                                        },
                                                                        "uri": "https://management.azure.com/subscriptions/@{split(variables('ResourceID'),'/')[2]}/providers/@{split( split( variables('ResourceID'), '/providers/' )[1], '/')[0]}"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Set_variable_-_SubscriptionID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Http"
                                                                },
                                                                "v2_Filter_array_-_Provider_resource_type": {
                                                                    "inputs": {
                                                                        "from": "@body('v2_API_Call_-_Get_resource_provider_information')['resourceTypes']",
                                                                        "where": "@equals(toLower(item()['resourceType']), toLower(split(split(variables('ResourceID'), '/providers/')[1], '/')[1]))"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_Call_-_Get_resource_provider_information": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Query"
                                                                },
                                                                "v2_Set_variable_-_ResourceID": {
                                                                    "inputs": {
                                                                        "name": "ResourceID",
                                                                        "value": "@{toLower(item()[variables('ResultIndex')])}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                },
                                                                "v2_Set_variable_-_Resource_Data_(Create_or_Update)": {
                                                                    "inputs": {
                                                                        "name": "ResourceData",
                                                                        "value": "@body('v2_API_Call_-_Get_generic_resource_data')"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_Call_-_Get_generic_resource_data": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                },
                                                                "v2_Set_variable_-_SubscriptionID": {
                                                                    "inputs": {
                                                                        "name": "SubscriptionID",
                                                                        "value": "@{split(variables('ResourceId'),'/')[2]}"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Set_variable_-_ResourceID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                            "resourceid"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@toLower(item()[variables('ResultIndex')])",
                                                                                "@trim('')"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "startsWith": [
                                                                            "@toLower(item()[variables('ResultIndex')])",
                                                                            "/"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_If_SUBSCRIPTION_ID_column_found,_store_subscription_id": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "v2_Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA_(DELETED)": {
                                                            "actions": {
                                                                "v2_API_Call_-_Find_change_detail_for_ResourceID": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "body": "@outputs('v2_Compose_JSON_-_API_Change_request')",
                                                                        "method": "POST",
                                                                        "queries": {
                                                                            "api-version": "2018-09-01-preview"
                                                                        },
                                                                        "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resourceChangeDetails"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Compose_JSON_-_API_Change_request": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Http"
                                                                },
                                                                "v2_API_Call_-_Find_change_events_for_ResourceID": {
                                                                    "inputs": {
                                                                        "authentication": {
                                                                            "audience": "https://management.azure.com",
                                                                            "type": "ManagedServiceIdentity"
                                                                        },
                                                                        "body": "@outputs('v2_Compose_JSON_-_API_Event_request')",
                                                                        "headers": {
                                                                            "Content-Type": "application/json"
                                                                        },
                                                                        "method": "POST",
                                                                        "queries": {
                                                                            "api-version": "2018-09-01-preview"
                                                                        },
                                                                        "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resourceChanges"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Compose_JSON_-_API_Event_request": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Http"
                                                                },
                                                                "v2_Compose_JSON_-_API_Change_request": {
                                                                    "inputs": {
                                                                        "changeId": "@{body('v2_Filter_array_-_Delete_change_Event')[0]['changeId']}",
                                                                        "resourceId": "@{variables('ResourceId')}"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_Filter_array_-_Delete_change_Event": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Compose"
                                                                },
                                                                "v2_Compose_JSON_-_API_Event_request": {
                                                                    "inputs": {
                                                                        "fetchPropertyChanges": true,
                                                                        "interval": {
                                                                            "end": "@{addMinutes(body('parse_Alert_JSON')['data']['essentials']['firedDateTime'],15)}",
                                                                            "start": "@{addMinutes(body('parse_Alert_JSON')['data']['essentials']['firedDateTime'],-60)}"
                                                                        },
                                                                        "resourceId": "@{variables('ResourceId')}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "Compose"
                                                                },
                                                                "v2_Filter_array_-_Delete_change_Event": {
                                                                    "inputs": {
                                                                        "from": "@body('v2_API_Call_-_Find_change_events_for_ResourceID')['changes']",
                                                                        "where": "@equals(item()['changeType'], 'Delete')"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_Call_-_Find_change_events_for_ResourceID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Query"
                                                                },
                                                                "v2_Set_variable_-_ResourceData_(Delete_action)": {
                                                                    "inputs": {
                                                                        "name": "ResourceData",
                                                                        "value": "@body('v2_API_Call_-_Find_change_detail_for_ResourceID')['beforeSnapshot']['content']"
                                                                    },
                                                                    "runAfter": {
                                                                        "v2_API_Call_-_Find_change_detail_for_ResourceID": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@variables('ResourceID')",
                                                                                "@trim('')"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "equals": [
                                                                            "@variables('ResourceData')",
                                                                            "@null"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA": [
                                                                    "Succeeded",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "v2_Condition_-_If_SUBSCRIPTION_ID_column_found,_store_subscription_id": {
                                                            "actions": {
                                                                "v2_Set_variable_-_SubscriptionID_(2)": {
                                                                    "inputs": {
                                                                        "name": "SubscriptionID",
                                                                        "value": "@{item()[variables('ResultIndex')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                            "subscriptionid"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@toLower(item()[variables('ResultIndex')])",
                                                                                "@trim('')"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_If_hash_columns_exist,_get_value_and_skip_output": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "v2_Condition_-_If_hash_columns_exist,_get_value_and_skip_output": {
                                                            "actions": {
                                                                "v2_Set_variable_-_AlertHash": {
                                                                    "inputs": {
                                                                        "name": "AlertHash",
                                                                        "value": "@{item()[variables('ResultIndex')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "v2_Condition_-_ignore_unwanted_columns": {
                                                                        "actions": {
                                                                            "v2_If_special_column_'TagValue'_found": {
                                                                                "actions": {
                                                                                    "v2_Set_variable": {
                                                                                        "inputs": {
                                                                                            "name": "ServiceTagValue",
                                                                                            "value": "@{item()[variables('ResultIndex')]}"
                                                                                        },
                                                                                        "runAfter": {},
                                                                                        "type": "SetVariable"
                                                                                    }
                                                                                },
                                                                                "expression": {
                                                                                    "and": [
                                                                                        {
                                                                                            "equals": [
                                                                                                "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                                                "filteronserviceprovidertagvalue"
                                                                                            ]
                                                                                        }
                                                                                    ]
                                                                                },
                                                                                "runAfter": {},
                                                                                "type": "If"
                                                                            }
                                                                        },
                                                                        "else": {
                                                                            "actions": {
                                                                                "v2_Append_to_string_variable_-_EventMessageText": {
                                                                                    "inputs": {
                                                                                        "name": "EventMessageText",
                                                                                        "value": " - @{replace(replace(variables('ResultColumns')[variables('ResultIndex')]['name'],'_',' '),' percent',' %')} : @{replace(string(item()[variables('ResultIndex')]),'[FORCE_USE_GENERIC_CI]','')}@{variables('CRLF')}"
                                                                                    },
                                                                                    "runAfter": {},
                                                                                    "type": "AppendToStringVariable"
                                                                                }
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "contains": [
                                                                                        "@variables('IgnoredColumns')",
                                                                                        "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "If"
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                            "alerthash"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        },
                                                        "v2_Increment_variable_-_ResultIndex": {
                                                            "inputs": {
                                                                "name": "ResultIndex",
                                                                "value": 1
                                                            },
                                                            "runAfter": {
                                                                "v2_Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA_(DELETED)": [
                                                                    "Succeeded",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "IncrementVariable"
                                                        }
                                                    },
                                                    "expression": "@equals(variables('ResultIndex'), length(variables('ResultColumns')))",
                                                    "limit": {
                                                        "count": 60,
                                                        "timeout": "PT1H"
                                                    },
                                                    "runAfter": {
                                                        "V2_Condition_-_Set_variable_for_disabled_alert_rule": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Until"
                                                },
                                                "v2_Set_variable_-_AlertHash_=_0": {
                                                    "inputs": {
                                                        "name": "AlertHash",
                                                        "value": "NULL"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_ResultIndex_=_0": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_EventMessageText": {
                                                    "inputs": {
                                                        "name": "EventMessageText",
                                                        "value": "- Alert Name : @{body('parse_Alert_JSON')['data']['essentials']['alertRule']}@{variables('CRLF')} - Alert Desc : @{body('parse_Alert_JSON')['data']['essentials']['description']}@{variables('CRLF')}@{variables('CRLF')}"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_AlertHash_=_0": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_ForcedConfigItemID_to_empty": {
                                                    "inputs": {
                                                        "name": "ForcedConfigItemID",
                                                        "value": "@{trim('')}"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_GenericConfigItemID_to_default": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_GenericConfigItemID_to_default": {
                                                    "inputs": {
                                                        "name": "GenericConfigItemID",
                                                        "value": "DEFAULT"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_EventMessageText": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_ResourceData_=_(empty)": {
                                                    "inputs": {
                                                        "name": "ResourceData",
                                                        "value": "@null"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_SubscriptionID_=_(empty)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_ResourceID_=_(empty)": {
                                                    "inputs": {
                                                        "name": "ResourceID",
                                                        "value": "@{trim('')}"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_ForcedConfigItemID_to_empty": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_ResultIndex_=_0": {
                                                    "inputs": {
                                                        "name": "ResultIndex",
                                                        "value": 0
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_SNOWCategories_(LA)_to_default": {
                                                    "inputs": {
                                                        "name": "SNOWCategories",
                                                        "value": "DEFAULT"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_SkipAlert_=_false": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_SNOWEnvironmentCode_(LA)_to_default": {
                                                    "inputs": {
                                                        "name": "SNOWEnvironmentCode",
                                                        "value": "DEFAULT"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_SNOWCategories_(LA)_to_default": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_SNOWTenantCode_(LA)_to_default": {
                                                    "inputs": {
                                                        "name": "SNOWTenantCode",
                                                        "value": "DEFAULT"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_SNOWEnvironmentCode_(LA)_to_default": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_ServiceTagValue_=_true_(default)": {
                                                    "inputs": {
                                                        "name": "ServiceTagValue",
                                                        "value": "true"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_ResourceData_=_(empty)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_SkipAlert_=_false": {
                                                    "inputs": {
                                                        "name": "SkipAlert",
                                                        "value": false
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_ServiceTagValue_=_true_(default)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                },
                                                "v2_Set_variable_-_SubscriptionID_=_(empty)": {
                                                    "inputs": {
                                                        "name": "SubscriptionID",
                                                        "value": "@{trim('')}"
                                                    },
                                                    "runAfter": {
                                                        "v2_Set_variable_-_ResourceID_=_(empty)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "description": "For log analytics, each result row can contains an alert for different resources. Each row is processed and may create an incident.",
                                            "runAfter": {},
                                            "type": "Scope"
                                        }
                                    },
                                    "foreach": "@body('API_Call_-_Retrieve_Alert_Data_for_LOG_V2')?['tables'][0]['rows']",
                                    "runAfter": {
                                        "v2_Set_variable_-_ResultColumns_=_json.columns": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "v2_Set_variable_-_ResultColumns_=_json.columns": {
                                    "inputs": {
                                        "name": "ResultColumns",
                                        "value": "@body('API_Call_-_Retrieve_Alert_Data_for_LOG_V2')?['tables'][0]['columns']"
                                    },
                                    "runAfter": {
                                        "API_Call_-_Retrieve_Alert_Data_for_LOG_V2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "foreach": "@body('Parse_Alert_JSON')?['data']?['alertContext']?['condition']?['allOf']",
                            "runAfter": {},
                            "type": "Foreach"
                        }
                    },
                    "case": "Log Alerts V2"
                },
                "Alert_type_-_LOG_ANALYTICS": {
                    "actions": {
                        "Process_each_search_result_ROW_and_create_incident": {
                            "actions": {
                                "LOOP_-_ROWS": {
                                    "actions": {
                                        "Condition_-_Get_Monitoring_ConfigItemID__from_tag_if_present": {
                                            "actions": {
                                                "Condition_-_Check_if_specific_monitoring_CI_TAG_is_present": {
                                                    "actions": {
                                                        "Set_variable_-_ForcedConfigItemID_to_specified_ID_from_tag": {
                                                            "inputs": {
                                                                "name": "ForcedConfigItemID",
                                                                "value": "@{trim(variables('ResourceData')['tags'][parameters('ServiceProviderMonitoringCITag')])}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceData')",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "contains": [
                                                                    "@variables('ResourceData')",
                                                                    "tags"
                                                                ]
                                                            },
                                                            {
                                                                "contains": [
                                                                    "@variables('ResourceData')['tags']",
                                                                    "@parameters('ServiceProviderMonitoringCITag')"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('ResourceID')",
                                                                "@trim('')"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('ResourceData')",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_If_resource_=_VM": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_If_resource_=_VM": {
                                            "actions": {
                                                "Condition_-_append_var_SNOWCategories_with_osType_(Windows,_Linux)": {
                                                    "actions": {
                                                        "append_OS_type_to_alert_of_type_Antimalware": {
                                                            "actions": {
                                                                "append_variable_-_SNOWCategories_+=_osType_(LA)_(ANTIMALWARE)": {
                                                                    "inputs": {
                                                                        "name": "SNOWCategories",
                                                                        "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('SNOWCategories')",
                                                                            "Cloud.IaaS.DCS-Azure-Antimalware"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "append_OS_type_to_alert_of_type_Azure-OS": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "append_OS_type_to_alert_of_type_Azure-OS": {
                                                            "actions": {
                                                                "append_variable_-_SNOWCategories_+=_osType_(LA)": {
                                                                    "inputs": {
                                                                        "name": "SNOWCategories",
                                                                        "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('SNOWCategories')",
                                                                            "Cloud.IaaS.DCS-Azure-OS"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "or": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                            "Windows"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "equals": [
                                                                            "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                            "Linux"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                },
                                                "Condition_-_if_VM_is_part_of_a_scaleset,_set_ResourceId": {
                                                    "actions": {
                                                        "Set_variable_-_ResourceId_(1)": {
                                                            "inputs": {
                                                                "name": "ResourceID",
                                                                "value": "@variables('ScaleSetResourceID')"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_ScaleSetResourceID": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        },
                                                        "Set_variable_-_ScaleSetResourceID": {
                                                            "inputs": {
                                                                "name": "ScaleSetResourceID",
                                                                "value": "@{split(variables('ResourceID'),'/virtualmachines/')[0]}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@variables('ResourceID')",
                                                                    "/providers/microsoft.compute/virtualmachinescalesets/"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_append_var_SNOWCategories_with_osType_(Windows,_Linux)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Condition_-_if_alert_type_is_Agent_Availability,_ignore_alert_if_VM_is_stopped": {
                                                    "actions": {
                                                        "API_Call_-_Get_VM_instance_information": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2015-05-01-preview"
                                                                },
                                                                "uri": "https://management.azure.com@{variables('ResourceID')}/InstanceView"
                                                            },
                                                            "runAfter": {},
                                                            "type": "Http"
                                                        },
                                                        "Condition_-_If_VM_is_stopped,_skip_alert": {
                                                            "actions": {
                                                                "Set_variable_-_SkipAlert_(VM_is_stopped)": {
                                                                    "inputs": {
                                                                        "name": "SkipAlert",
                                                                        "value": true
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "contains": [
                                                                                "@toLower(body('API_Call_-_Get_VM_instance_information')['statuses'][1]['code'])",
                                                                                "running"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Get_VM_instance_information": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@ToLower(body('parse_Alert_JSON')['data']['alertContext']['SearchQuery'])",
                                                                    "summarize lastcall = max(timegenerated) by computer"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_if_VM_is_part_of_a_scaleset,_set_ResourceId": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "or": [
                                                            {
                                                                "contains": [
                                                                    "@variables('ResourceID')",
                                                                    "/providers/microsoft.compute/virtualmachines/"
                                                                ]
                                                            },
                                                            {
                                                                "contains": [
                                                                    "@variables('ResourceID')",
                                                                    "/providers/microsoft.compute/virtualmachinescalesets/"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('ResourceData')",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_Set_variable_EventType_(LA)_from_alert_description": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_If_the_SubscriptionID_is_known,_check_SNOW_environment_configuration": {
                                            "actions": {
                                                "Determine_SNOW_target_ENV_(LA)": {
                                                    "actions": {
                                                        "API_CALL_-_Get_subscription_data_(LA)": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2020-01-01"
                                                                },
                                                                "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "Http"
                                                        },
                                                        "If_SNOW_CAT_overide_tag_is_present_at_subscription_level_set_new_CAT_(LA)": {
                                                            "actions": {
                                                                "Set_new_CAT_for_SNOW_(LA)": {
                                                                    "inputs": {
                                                                        "name": "SNOWCategories",
                                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowCatOverideTag')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')",
                                                                            "tags"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                            "@parameters('SnowCatOverideTag')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(LA)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(LA)": {
                                                            "actions": {
                                                                "Set_new_ENV_for_SNOW_(LA)": {
                                                                    "inputs": {
                                                                        "name": "SNOWEnvironmentCode",
                                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowEnvOverideTag')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')",
                                                                            "tags"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                            "@parameters('SnowEnvOverideTag')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "API_CALL_-_Get_subscription_data_(LA)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(LA)": {
                                                            "actions": {
                                                                "Set_new_FO_for_SNOW_(LA)": {
                                                                    "inputs": {
                                                                        "name": "SNOWTenantCode",
                                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowFoOverideTag')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')",
                                                                            "tags"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                            "@parameters('SnowFoOverideTag')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(LA)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(LA)": {
                                                            "actions": {
                                                                "Set_new_GenericConfigItemID_for_SNOW_(LA)": {
                                                                    "inputs": {
                                                                        "name": "GenericConfigItemID",
                                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(LA)')['tags'][parameters('SnowGenericCiOverideTag')]}"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "SetVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')",
                                                                            "tags"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    {
                                                                        "contains": [
                                                                            "@body('API_CALL_-_Get_subscription_data_(LA)')?['tags']",
                                                                            "@parameters('SnowGenericCiOverideTag')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(LA)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {},
                                                    "type": "Scope"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('SubscriptionID')",
                                                                "@trim('')"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_SKIP_alert_if_resourceData_is_not_available_(or_Tags_not_compliant)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_SKIP_alert_if_resourceData_is_not_available_(or_Tags_not_compliant)": {
                                            "actions": {
                                                "Set_variable_-_SkipAlert_=_true_(resourceid_not_found)": {
                                                    "inputs": {
                                                        "name": "SkipAlert",
                                                        "value": true
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition_-_Check_if_service_provider_TAG_is_present": {
                                                        "actions": {
                                                            "Condition_-_skip_if_Maintenance_tag_is_set_(LA)": {
                                                                "actions": {
                                                                    "Set_variable_SkipAlert=true_(Maintenance_tag,_LA)": {
                                                                        "inputs": {
                                                                            "name": "SkipAlert",
                                                                            "value": true
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "SetVariable"
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "contains": [
                                                                                "@toLower(string(variables('ResourceData')['tags']))",
                                                                                "@concat('\"',parameters('ServiceProviderMaintenanceTag'),'\":\"true\"')"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "runAfter": {},
                                                                "type": "If"
                                                            }
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Skip_if_ResourceID_exist,_but_no_tag_found": {
                                                                    "actions": {
                                                                        "Condition_-_skip_only_for_resources_that_do_support_tags_(LA)": {
                                                                            "actions": {
                                                                                "Set_variable_-_SkipAlert_=_true_(managed_tag_not_found)": {
                                                                                    "inputs": {
                                                                                        "name": "SkipAlert",
                                                                                        "value": true
                                                                                    },
                                                                                    "runAfter": {},
                                                                                    "type": "SetVariable"
                                                                                }
                                                                            },
                                                                            "expression": {
                                                                                "and": [
                                                                                    {
                                                                                        "not": {
                                                                                            "equals": [
                                                                                                "@toLower(variables('ResourceData')['type'])",
                                                                                                "@toLower('microsoft.authorization/policyassignments')"
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "If"
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@variables('ResourceID')",
                                                                                        "@trim('')"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            {
                                                                                "not": {
                                                                                    "equals": [
                                                                                        "@parameters('ServiceProviderManagedTag')",
                                                                                        "@trim('')"
                                                                                    ]
                                                                                }
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "If"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@variables('ResourceData')",
                                                                            "@null"
                                                                        ]
                                                                    }
                                                                },
                                                                {
                                                                    "contains": [
                                                                        "@variables('ResourceData')",
                                                                        "tags"
                                                                    ]
                                                                },
                                                                {
                                                                    "contains": [
                                                                        "@variables('ResourceData')['tags']",
                                                                        "@parameters('ServiceProviderManagedTag')"
                                                                    ]
                                                                },
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@toLower(trim(variables('ResourceData')['tags'][parameters('ServiceProviderManagedTag')]))",
                                                                            false
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "runAfter": {},
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('ResourceID')",
                                                                "@trim('')"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "equals": [
                                                            "@variables('ResourceData')",
                                                            "@null"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "LOOP_-_COLUMNS": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_Set_variable_EventType_(LA)_from_alert_description": {
                                            "actions": {
                                                "Condition_-_Check_if_EvenType_=_AVAILABILITY_is_specified": {
                                                    "actions": {
                                                        "Set_variable_-_EventType_=_AVAILABILITY": {
                                                            "inputs": {
                                                                "name": "EventType",
                                                                "value": "AVAILABILITY"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "startsWith": [
                                                                    "@trim(split(replace(toLower(body('Parse_Alert_JSON')['data']['essentials']['description']),'event type', 'eventtype'),string('eventtype'))[1])",
                                                                    "availability"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_Check_if_EvenType_=_PERFORMANCE_is_specified": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Condition_-_Check_if_EvenType_=_PERFORMANCE_is_specified": {
                                                    "actions": {
                                                        "Set_variable_-_EventType_=_PERFORMANCE": {
                                                            "inputs": {
                                                                "name": "EventType",
                                                                "value": "PERFORMANCE"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "startsWith": [
                                                                    "@trim(split(replace(toLower(body('Parse_Alert_JSON')['data']['essentials']['description']),'event type', 'eventtype'),string('eventtype'))[1])",
                                                                    "performance"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                }
                                            },
                                            "description": "eventype can be specified in the alert description after the keyword 'EventType', it can be 'PERFORMANCE' or 'AVAILABILITY'. Otherwise the default is used.",
                                            "expression": {
                                                "or": [
                                                    {
                                                        "contains": [
                                                            "@toLower(body('parse_Alert_JSON')['data']['essentials']['description'])",
                                                            "@string('eventtype')"
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@toLower(body('parse_Alert_JSON')['data']['essentials']['description'])",
                                                            "@string('event type')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_Set_variable_SNOWCategories_(LA)_from_alert_description": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_Set_variable_SNOWCategories_(LA)_from_alert_description": {
                                            "actions": {
                                                "Set_variable_-_SNOWCategories_(LA)_=_triplet_from_alert_description": {
                                                    "inputs": {
                                                        "name": "SNOWCategories",
                                                        "value": "@{split(body('parse_Alert_JSON')['data']['essentials']['description'], string(' - '))[0]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "description": "1st string of the alert description is considered to be ServiceNow category triplet if it is seperated from the rest of the description by ' - ' (space-dash-space) and contains 1 or 2 dots, but does not contain a space or ends with dot.",
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('parse_Alert_JSON')['data']['essentials']['description']",
                                                            "@string(' - ')"
                                                        ]
                                                    },
                                                    {
                                                        "greater": [
                                                            "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                            1
                                                        ]
                                                    },
                                                    {
                                                        "lessOrEquals": [
                                                            "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                            3
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "contains": [
                                                                "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                                "@string(' ')"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not": {
                                                            "endsWith": [
                                                                "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                                "@string('.')"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_If_the_SubscriptionID_is_known,_check_SNOW_environment_configuration": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_if_not_skipped,_Send_alert_to_SNOW": {
                                            "actions": {
                                                "API_Call_-_Call_Event_Listener_function_-_LOG_ANALYTICS": {
                                                    "inputs": {
                                                        "body": "@outputs('Compose_-_EventJSON_-_Log_Analytics')",
                                                        "headers": {
                                                            "Content-Type": "application/json",
                                                            "x-functions-key": "@variables('FunctionAPIKey')"
                                                        },
                                                        "method": "POST",
                                                        "retryPolicy": {
                                                            "count": 10,
                                                            "interval": "PT30S",
                                                            "maximumInterval": "PT2M",
                                                            "minimumInterval": "PT30S",
                                                            "type": "exponential"
                                                        },
                                                        "uri": "@{parameters('ListenerFunctionUrl')}"
                                                    },
                                                    "runAfter": {
                                                        "Compose_-_EventJSON_-_Log_Analytics": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "runtimeConfiguration": {
                                                        "secureData": {
                                                            "properties": [
                                                                "inputs"
                                                            ]
                                                        }
                                                    },
                                                    "type": "Http"
                                                },
                                                "Compose_-_EventJSON_-_Log_Analytics": {
                                                    "inputs": {
                                                        "dateTimeOccured": "@{body('parse_Alert_JSON')['data']['essentials']['firedDateTime']}",
                                                        "eventCategory": "@{variables('SNOWCategories')}",
                                                        "eventMessageText": "Alert UID [@{variables('AlertHash')}]@{variables('CRLF')} @{variables('EventMessageText')} -@{variables('CRLF')}",
                                                        "eventSeverity": "@{variables('SeverityMapping')[body('parse_Alert_JSON')?['data']['essentials']['severity']]}",
                                                        "eventType": "@{variables('EventType')}",
                                                        "forcedMonitoringId": "@{variables('ForcedConfigItemID')}",
                                                        "genericCIMonitoringId": "@{variables('GenericConfigItemID')}",
                                                        "payloadtype": "itsm-event",
                                                        "resourceid": "@{variables('ResourceID')}",
                                                        "targetsnowenv": "@{variables('SNOWEnvironmentCode')}",
                                                        "targetsnowfo": "@{variables('SNOWTenantCode')}"
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_If_alert_hash_doest_not_exist,_generate_it": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose"
                                                },
                                                "Condition_-_If_alert_hash_doest_not_exist,_generate_it": {
                                                    "actions": {
                                                        "API_Call_-_Calculate_template_hash": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "body": {
                                                                    "$schema": "http://schemas.management.azure.com/deploymentTemplate?api-version=2014-04-01-preview",
                                                                    "contentVersion": "1.0.0.0",
                                                                    "parameters": {
                                                                        "@{base64(variables('EventMessageText'))}": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "resources": []
                                                                },
                                                                "method": "POST",
                                                                "queries": {
                                                                    "api-version": "2020-06-01"
                                                                },
                                                                "uri": "https://management.azure.com/providers/Microsoft.Resources/calculateTemplateHash"
                                                            },
                                                            "runAfter": {},
                                                            "type": "Http"
                                                        },
                                                        "Set_variable_-_AlertHash_(from_API)": {
                                                            "inputs": {
                                                                "name": "AlertHash",
                                                                "value": "@{body('API_Call_-_Calculate_template_hash')?['templateHash']}"
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Calculate_template_hash": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@variables('AlertHash')",
                                                                    "NULL"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                },
                                                "Set_variable_-_OUTPUT_SENTALERT": {
                                                    "inputs": {
                                                        "name": "OUTPUT_SENTALERT",
                                                        "value": "@{body('parse_Alert_JSON')['data']['essentials']['alertRule']}"
                                                    },
                                                    "runAfter": {
                                                        "API_Call_-_Call_Event_Listener_function_-_LOG_ANALYTICS": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@variables('SkipAlert')",
                                                            false
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@length( intersection( split(replace(parameters('SnowCategoriesSkipped'), ' ', ''), ','), createArray(variables('SNOWCategories')) ))",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_Get_Monitoring_ConfigItemID__from_tag_if_present": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "LOOP_-_COLUMNS": {
                                            "actions": {
                                                "Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA": {
                                                    "actions": {
                                                        "API_Call_-_Get_generic_resource_data": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "@{body('Filter_array_-_Provider_resource_type')[0]['apiVersions'][0]}"
                                                                },
                                                                "uri": "https://management.azure.com@{variables('ResourceID')}"
                                                            },
                                                            "runAfter": {
                                                                "Filter_array_-_Provider_resource_type": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "API_Call_-_Get_resource_provider_information": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "GET",
                                                                "queries": {
                                                                    "api-version": "2015-01-01"
                                                                },
                                                                "uri": "https://management.azure.com/subscriptions/@{split(variables('ResourceID'),'/')[2]}/providers/@{split( split( variables('ResourceID'), '/providers/' )[1], '/')[0]}"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_SubscriptionID": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Filter_array_-_Provider_resource_type": {
                                                            "inputs": {
                                                                "from": "@body('API_Call_-_Get_resource_provider_information')['resourceTypes']",
                                                                "where": "@equals(toLower(item()['resourceType']), toLower(split(split(variables('ResourceID'), '/providers/')[1], '/')[1]))"
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Get_resource_provider_information": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Query"
                                                        },
                                                        "Set_variable_-_ResourceID": {
                                                            "inputs": {
                                                                "name": "ResourceID",
                                                                "value": "@{toLower(item()[variables('ResultIndex')])}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        },
                                                        "Set_variable_-_Resource_Data_(Create_or_Update)": {
                                                            "inputs": {
                                                                "name": "ResourceData",
                                                                "value": "@body('API_Call_-_Get_generic_resource_data')"
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Get_generic_resource_data": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        },
                                                        "Set_variable_-_SubscriptionID": {
                                                            "inputs": {
                                                                "name": "SubscriptionID",
                                                                "value": "@{split(variables('ResourceId'),'/')[2]}"
                                                            },
                                                            "runAfter": {
                                                                "Set_variable_-_ResourceID": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                    "resourceid"
                                                                ]
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@toLower(item()[variables('ResultIndex')])",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "startsWith": [
                                                                    "@toLower(item()[variables('ResultIndex')])",
                                                                    "/"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_If_SUBSCRIPTION_ID_column_found,_store_subscription_id": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA_(DELETED)": {
                                                    "actions": {
                                                        "API_Call_-_Find_change_detail_for_ResourceID": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "body": "@outputs('Compose_JSON_-_API_Change_request')",
                                                                "method": "POST",
                                                                "queries": {
                                                                    "api-version": "2018-09-01-preview"
                                                                },
                                                                "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resourceChangeDetails"
                                                            },
                                                            "runAfter": {
                                                                "Compose_JSON_-_API_Change_request": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "API_Call_-_Find_change_events_for_ResourceID": {
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://management.azure.com",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "body": "@outputs('Compose_JSON_-_API_Event_request')",
                                                                "headers": {
                                                                    "Content-Type": "application/json"
                                                                },
                                                                "method": "POST",
                                                                "queries": {
                                                                    "api-version": "2018-09-01-preview"
                                                                },
                                                                "uri": "https://management.azure.com/providers/Microsoft.ResourceGraph/resourceChanges"
                                                            },
                                                            "runAfter": {
                                                                "Compose_JSON_-_API_Event_request": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Http"
                                                        },
                                                        "Compose_JSON_-_API_Change_request": {
                                                            "inputs": {
                                                                "changeId": "@{body('Filter_array_-_Delete_change_Event')[0]['changeId']}",
                                                                "resourceId": "@{variables('ResourceId')}"
                                                            },
                                                            "runAfter": {
                                                                "Filter_array_-_Delete_change_Event": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Compose"
                                                        },
                                                        "Compose_JSON_-_API_Event_request": {
                                                            "inputs": {
                                                                "fetchPropertyChanges": true,
                                                                "interval": {
                                                                    "end": "@{addMinutes(body('parse_Alert_JSON')['data']['essentials']['firedDateTime'],15)}",
                                                                    "start": "@{addMinutes(body('parse_Alert_JSON')['data']['essentials']['firedDateTime'],-60)}"
                                                                },
                                                                "resourceId": "@{variables('ResourceId')}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "Compose"
                                                        },
                                                        "Filter_array_-_Delete_change_Event": {
                                                            "inputs": {
                                                                "from": "@body('API_Call_-_Find_change_events_for_ResourceID')['changes']",
                                                                "where": "@equals(item()['changeType'], 'Delete')"
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Find_change_events_for_ResourceID": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "Query"
                                                        },
                                                        "Set_variable_-_ResourceData_(Delete_action)": {
                                                            "inputs": {
                                                                "name": "ResourceData",
                                                                "value": "@body('API_Call_-_Find_change_detail_for_ResourceID')['beforeSnapshot']['content']"
                                                            },
                                                            "runAfter": {
                                                                "API_Call_-_Find_change_detail_for_ResourceID": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@variables('ResourceID')",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            },
                                                            {
                                                                "equals": [
                                                                    "@variables('ResourceData')",
                                                                    "@null"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Condition_-_If_SUBSCRIPTION_ID_column_found,_store_subscription_id": {
                                                    "actions": {
                                                        "Set_variable_-_SubscriptionID_(2)": {
                                                            "inputs": {
                                                                "name": "SubscriptionID",
                                                                "value": "@{item()[variables('ResultIndex')]}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                    "subscriptionid"
                                                                ]
                                                            },
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@toLower(item()[variables('ResultIndex')])",
                                                                        "@trim('')"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_If_hash_columns_exist,_get_value_and_skip_output": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Condition_-_If_hash_columns_exist,_get_value_and_skip_output": {
                                                    "actions": {
                                                        "Set_variable_-_AlertHash": {
                                                            "inputs": {
                                                                "name": "AlertHash",
                                                                "value": "@{item()[variables('ResultIndex')]}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Condition_-_ignore_unwanted_columns": {
                                                                "actions": {
                                                                    "If_special_column_'TagValue'_found": {
                                                                        "actions": {
                                                                            "Set_variable": {
                                                                                "inputs": {
                                                                                    "name": "ServiceTagValue",
                                                                                    "value": "@{item()[variables('ResultIndex')]}"
                                                                                },
                                                                                "runAfter": {},
                                                                                "type": "SetVariable"
                                                                            }
                                                                        },
                                                                        "expression": {
                                                                            "and": [
                                                                                {
                                                                                    "equals": [
                                                                                        "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                                        "filteronserviceprovidertagvalue"
                                                                                    ]
                                                                                }
                                                                            ]
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "If"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Append_to_string_variable_-_EventMessageText": {
                                                                            "inputs": {
                                                                                "name": "EventMessageText",
                                                                                "value": " - @{replace(replace(variables('ResultColumns')[variables('ResultIndex')]['name'],'_',' '),' percent',' %')} : @{replace(string(item()[variables('ResultIndex')]),'[FORCE_USE_GENERIC_CI]','')}@{variables('CRLF')}"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "AppendToStringVariable"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "contains": [
                                                                                "@variables('IgnoredColumns')",
                                                                                "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "runAfter": {},
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@toLower(variables('ResultColumns')[variables('ResultIndex')]['name'])",
                                                                    "alerthash"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                },
                                                "Increment_variable_-_ResultIndex": {
                                                    "inputs": {
                                                        "name": "ResultIndex",
                                                        "value": 1
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_If_RESOURCE_ID_column_found,_get_resource_DATA_(DELETED)": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "IncrementVariable"
                                                }
                                            },
                                            "expression": "@equals(variables('ResultIndex'), length(variables('ResultColumns')))",
                                            "limit": {
                                                "count": 60,
                                                "timeout": "PT1H"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SNOWTenantCode_(LA)_to_default": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Until"
                                        },
                                        "Set_variable_-_AlertHash_=_0": {
                                            "inputs": {
                                                "name": "AlertHash",
                                                "value": "NULL"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_ResultIndex_=_0": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_EventMessageText": {
                                            "inputs": {
                                                "name": "EventMessageText",
                                                "value": "- Alert Name : @{body('parse_Alert_JSON')['data']['essentials']['alertRule']}@{variables('CRLF')} - Alert Desc : @{body('parse_Alert_JSON')['data']['essentials']['description']}@{variables('CRLF')}@{variables('CRLF')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_AlertHash_=_0": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_ForcedConfigItemID_to_empty": {
                                            "inputs": {
                                                "name": "ForcedConfigItemID",
                                                "value": "@{trim('')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_GenericConfigItemID_to_default": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_GenericConfigItemID_to_default": {
                                            "inputs": {
                                                "name": "GenericConfigItemID",
                                                "value": "DEFAULT"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_EventMessageText": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_ResourceData_=_(empty)": {
                                            "inputs": {
                                                "name": "ResourceData",
                                                "value": "@null"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SubscriptionID_=_(empty)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_ResourceID_=_(empty)": {
                                            "inputs": {
                                                "name": "ResourceID",
                                                "value": "@{trim('')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_ForcedConfigItemID_to_empty": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_ResultIndex_=_0": {
                                            "inputs": {
                                                "name": "ResultIndex",
                                                "value": 0
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_SNOWCategories_(LA)_to_default": {
                                            "inputs": {
                                                "name": "SNOWCategories",
                                                "value": "DEFAULT"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SkipAlert_=_false": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_SNOWEnvironmentCode_(LA)_to_default": {
                                            "inputs": {
                                                "name": "SNOWEnvironmentCode",
                                                "value": "DEFAULT"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SNOWCategories_(LA)_to_default": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_SNOWTenantCode_(LA)_to_default": {
                                            "inputs": {
                                                "name": "SNOWTenantCode",
                                                "value": "DEFAULT"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SNOWEnvironmentCode_(LA)_to_default": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_ServiceTagValue_=_true_(default)": {
                                            "inputs": {
                                                "name": "ServiceTagValue",
                                                "value": "true"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_ResourceData_=_(empty)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_SkipAlert_=_false": {
                                            "inputs": {
                                                "name": "SkipAlert",
                                                "value": false
                                            },
                                            "runAfter": {
                                                "Set_variable_-_ServiceTagValue_=_true_(default)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        },
                                        "Set_variable_-_SubscriptionID_=_(empty)": {
                                            "inputs": {
                                                "name": "SubscriptionID",
                                                "value": "@{trim('')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_ResourceID_=_(empty)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "description": "For log analytics, each result row can contains an alert for different resources. Each row is processed and may create an incident.",
                                    "runAfter": {},
                                    "type": "Scope"
                                }
                            },
                            "foreach": "@body('parse_Alert_JSON')?['data']['alertContext']['SearchResults']['tables'][0]['rows']",
                            "runAfter": {
                                "Set_variable_-_ResultColumns_=_json.columns": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        },
                        "Set_variable_-_ResultColumns_=_json.columns": {
                            "inputs": {
                                "name": "ResultColumns",
                                "value": "@body('parse_Alert_JSON')?['data']['alertContext']['SearchResults']['tables'][0]['columns']"
                            },
                            "runAfter": {},
                            "type": "SetVariable"
                        }
                    },
                    "case": "Log Analytics"
                },
                "Alert_type_-_RESOURCE_HEALTH": {
                    "actions": {
                        "Process_each_ResourceID_in_the_alert_and_create_incident": {
                            "actions": {
                                "Condition_-_Check_if_service_provider_TAG_is_present_(2)": {
                                    "actions": {
                                        "Condition_-_Check_if_specific_monitoring_CI_TAG_is_present_(2)": {
                                            "actions": {
                                                "Set_variable_-_ForcedConfigItemID_to_specified_ID_from_resource_tag_(2)": {
                                                    "inputs": {
                                                        "name": "ForcedConfigItemID",
                                                        "value": "@{trim(variables('ResourceData')['tags'][parameters('ServiceProviderMonitoringCITag')])}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident'))",
                                                                "@trim('')"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@variables('ResourceData')",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@variables('ResourceData')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@variables('ResourceData')['tags']",
                                                            "@parameters('ServiceProviderMonitoringCITag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_If_resource_=_VM_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_If_resource_=_VM_(2)": {
                                            "actions": {
                                                "Condition_-_Append_var_SnowCategories_with_osType_Windows,Linux_(RH)": {
                                                    "actions": {
                                                        "append_OS_type_to_alert_of_type_Antimalware_(RH)": {
                                                            "actions": {
                                                                "append_variable_-_SNOWCategories_+=_osType_(RH)_(ANTIMALWARE)": {
                                                                    "inputs": {
                                                                        "name": "SNOWCategories",
                                                                        "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('SNOWCategories')",
                                                                            "Cloud.IaaS.DCS-Azure-Antimalware"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {
                                                                "append_OS_type_to_alert_of_type_Azure-OS_(RH)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "append_OS_type_to_alert_of_type_Azure-OS_(RH)": {
                                                            "actions": {
                                                                "append_variable_-_SNOWCategories_+=_osType_(RH)": {
                                                                    "inputs": {
                                                                        "name": "SNOWCategories",
                                                                        "value": "@concat('-',variables('ResourceData')['properties']['storageProfile']['osDisk']['osType'])"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToStringVariable"
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('SNOWCategories')",
                                                                            "Cloud.IaaS.DCS-Azure-OS"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "runAfter": {},
                                                            "type": "If"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "or": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                            "Windows"
                                                                        ]
                                                                    },
                                                                    {
                                                                        "equals": [
                                                                            "@variables('ResourceData')['properties']['storageProfile']['osDisk']['osType']",
                                                                            "Linux"
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {},
                                                    "type": "If"
                                                },
                                                "Condition_-_if_VM_is_part_of_a_scaleset,_set_ResourceId_(2)": {
                                                    "actions": {
                                                        "Set_variable_-_ScaleSetResourceID_(2)": {
                                                            "inputs": {
                                                                "name": "ResourceID",
                                                                "value": "@{split(toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident')),'/virtualmachines/')[0]}"
                                                            },
                                                            "runAfter": {},
                                                            "type": "SetVariable"
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "contains": [
                                                                    "@toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident'))",
                                                                    "/providers/microsoft.compute/virtualmachinescalesets/"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Condition_-_Append_var_SnowCategories_with_osType_Windows,Linux_(RH)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "contains": [
                                                            "@toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident'))",
                                                            "/providers/microsoft.compute/virtualmachines/"
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident'))",
                                                            "/providers/microsoft.compute/virtualmachinescalesets/"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Condition_-_skip_if_Maintenance_tag_is_set_(RH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_skip_if_Maintenance_tag_is_set_(RH)": {
                                            "actions": {
                                                "Set_variable_-_SkipAlert=true_(Maintenance_tag,_RH)": {
                                                    "inputs": {
                                                        "name": "SkipAlert",
                                                        "value": true
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@toLower(string(variables('ResourceData')['tags']))",
                                                            "@concat('\"',parameters('ServiceProviderMaintenanceTag'),'\":\"true\"')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Skip_if_ResourceID_exist,_but_no_tag_found_(RH)": {
                                                "actions": {
                                                    "Condition_-_skip_only_for_resources_that_do_support_tags_(RH)": {
                                                        "actions": {
                                                            "Set_variable_-_SkipAlert_=_true_(managed_tag_not_found)_(RH)": {
                                                                "inputs": {
                                                                    "name": "SkipAlert",
                                                                    "value": true
                                                                },
                                                                "runAfter": {},
                                                                "type": "SetVariable"
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@toLower(variables('ResourceData')['type'])",
                                                                            "@toLower('microsoft.authorization/policyassignments')"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "runAfter": {},
                                                        "type": "If"
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "not": {
                                                                "equals": [
                                                                    "@variables('ResourceID')",
                                                                    "@trim('')"
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "not": {
                                                                "equals": [
                                                                    "@parameters('ServiceProviderManagedTag')",
                                                                    "@trim('')"
                                                                ]
                                                            }
                                                        }
                                                    ]
                                                },
                                                "runAfter": {},
                                                "type": "If"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@variables('ResourceData')",
                                                        "@null"
                                                    ]
                                                }
                                            },
                                            {
                                                "contains": [
                                                    "@variables('ResourceData')",
                                                    "tags"
                                                ]
                                            },
                                            {
                                                "contains": [
                                                    "@variables('ResourceData')['tags']",
                                                    "@parameters('ServiceProviderManagedTag')"
                                                ]
                                            },
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@toLower(trim(variables('ResourceData')['tags'][parameters('ServiceProviderManagedTag')]))",
                                                        false
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Condition_-_set_variable_SNOWCategories_(RH)_from_alert_description": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_if_not_skipped,_Send_alert_to_SNOW_(2)": {
                                    "actions": {
                                        "API_Call_-_Calculate_template_hash_(2)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "$schema": "http://schemas.management.azure.com/deploymentTemplate?api-version=2014-04-01-preview",
                                                    "contentVersion": "1.0.0.0",
                                                    "parameters": {
                                                        "@{base64(variables('EventMessageText'))}": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "resources": []
                                                },
                                                "method": "POST",
                                                "queries": {
                                                    "api-version": "2020-06-01"
                                                },
                                                "uri": "https://management.azure.com/providers/Microsoft.Resources/calculateTemplateHash"
                                            },
                                            "runAfter": {
                                                "Append_variable_-_EventMessageText_(2)_-_Resource_information": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "API_Call_-_Call_Event_Listener_function_-_RESOURCE_HEALTH": {
                                            "inputs": {
                                                "body": "@outputs('Compose_-_EventJSON_-_Resource_Health')",
                                                "headers": {
                                                    "Content-Type": "application/json",
                                                    "x-functions-key": "@variables('FunctionAPIKey')"
                                                },
                                                "method": "POST",
                                                "retryPolicy": {
                                                    "count": 10,
                                                    "interval": "PT30S",
                                                    "maximumInterval": "PT2M",
                                                    "minimumInterval": "PT30S",
                                                    "type": "exponential"
                                                },
                                                "uri": "@{parameters('ListenerFunctionUrl')}"
                                            },
                                            "runAfter": {
                                                "Compose_-_EventJSON_-_Resource_Health": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            },
                                            "type": "Http"
                                        },
                                        "Append_variable_-_EventMessageText_(2)_-_Resource_information": {
                                            "inputs": {
                                                "name": "EventMessageText",
                                                "value": " - Issue Title : @{body('parse_Alert_JSON')['data']['alertContext']['properties']['title']} @{variables('CRLF')} - Issue Details : @{body('parse_Alert_JSON')['data']['alertContext']['properties']['details']} @{variables('CRLF')} - Current health status : @{body('parse_Alert_JSON')['data']['alertContext']['properties']['currentHealthStatus']} @{variables('CRLF')} - Previous health status : @{body('parse_Alert_JSON')['data']['alertContext']['properties']['previousHealthStatus']} @{variables('CRLF')} - Cause : @{body('parse_Alert_JSON')['data']['alertContext']['properties']['cause']} @{variables('CRLF')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_EventMessageText_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable"
                                        },
                                        "Compose_-_EventJSON_-_Resource_Health": {
                                            "inputs": {
                                                "dateTimeOccured": "@{body('parse_Alert_JSON')['data']['essentials']['firedDateTime']}",
                                                "eventCategory": "@{variables('SNOWCategories')}",
                                                "eventMessageText": "Alert UID [@{body('API_Call_-_Calculate_template_hash_(2)')?['templateHash']}]@{variables('CRLF')} @{variables('EventMessageText')} -@{variables('CRLF')}",
                                                "eventSeverity": "@{variables('SeverityMapping')[variables('ResourceHealthSeverity')]}",
                                                "eventType": "@{variables('EventType')}",
                                                "forcedMonitoringId": "@{variables('ForcedConfigItemID')}",
                                                "genericCIMonitoringId": "@{variables('GenericConfigItemID')}",
                                                "payloadtype": "itsm-event",
                                                "resourceid": "@{variables('ResourceID')}",
                                                "targetsnowenv": "@{variables('SNOWEnvironmentCode')}",
                                                "targetsnowfo": "@{variables('SNOWTenantCode')}"
                                            },
                                            "runAfter": {
                                                "API_Call_-_Calculate_template_hash_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Compose"
                                        },
                                        "Condition_-_Detemine_incident_severity": {
                                            "actions": {
                                                "Set_variable_-_ResourceHealthSeverity_=_error": {
                                                    "inputs": {
                                                        "name": "ResourceHealthSeverity",
                                                        "value": "Sev1"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "Set_variable_-_ResourceHealthSeverity_=_warning": {
                                                        "inputs": {
                                                            "name": "ResourceHealthSeverity",
                                                            "value": "Sev2"
                                                        },
                                                        "runAfter": {},
                                                        "type": "SetVariable"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@tolower(body('parse_Alert_JSON')['data']['alertContext']['properties']['currentHealthStatus'])",
                                                            "unavailable"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        },
                                        "Set_variable_-_EventMessageText_(2)": {
                                            "inputs": {
                                                "name": "EventMessageText",
                                                "value": "- Alert Name : @{body('parse_Alert_JSON')['data']['essentials']['alertRule']}@{variables('CRLF')} - Alert Desc : This Resource Health alert is triggered when an issue occurs in Azure platform @{variables('CRLF')}@{variables('CRLF')} - SubscriptionID : @{split(variables('ResourceID'),'/')[2]}  @{variables('CRLF')} - Resource group : @{split(variables('ResourceID'),'/')[4]}  @{variables('CRLF')} - Resource name : @{variables('ResourceData')['name']}  @{variables('CRLF')} - Resource type : @{variables('ResourceData')['type']}  @{variables('CRLF')} - ResourceID : @{variables('ResourceID')}  @{variables('CRLF')}"
                                            },
                                            "runAfter": {
                                                "Condition_-_Detemine_incident_severity": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@variables('SkipAlert')",
                                                    false
                                                ]
                                            },
                                            {
                                                "equals": [
                                                    "@length( intersection( split(replace(parameters('SnowCategoriesSkipped'), ' ', ''), ','), createArray(variables('SNOWCategories')) ))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Condition_-_Check_if_service_provider_TAG_is_present_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Condition_-_set_variable_SNOWCategories_(RH)_from_alert_description": {
                                    "actions": {
                                        "Set_variable_-_SNOWCategories_(RH)_=_triplet_from_alert_description": {
                                            "inputs": {
                                                "name": "SNOWCategories",
                                                "value": "@{split(body('parse_Alert_JSON')['data']['essentials']['description'], string(' - '))[0]}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "description": "1st string of the alert description is considered to be ServiceNow category triplet if it is seperated from the rest of the description by ' - ' (space-dash-space) and contains 1 or 2 dots, but does not contain a space or ends with dot.",
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@body('parse_Alert_JSON')['data']['essentials']['description']",
                                                    "@string(' - ')"
                                                ]
                                            },
                                            {
                                                "greater": [
                                                    "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                    1
                                                ]
                                            },
                                            {
                                                "lessOrEquals": [
                                                    "@length(split(split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0], '.'))",
                                                    3
                                                ]
                                            },
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                        "@string(' ')"
                                                    ]
                                                }
                                            },
                                            {
                                                "not": {
                                                    "endsWith": [
                                                        "@split(body('Parse_Alert_JSON')?['data']?['essentials']?['description'], string(' - '))[0]",
                                                        "@string('.')"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Get_generic_resource_DATA_if_available_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Determine_SNOW_target_ENV_(RH)": {
                                    "actions": {
                                        "API_CALL_-_Get_subscription_data_(RH)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2020-01-01"
                                                },
                                                "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "If_SNOW_CAT_overide_tag_is_present_at_subscription_level_set_new_CAT_(RH)": {
                                            "actions": {
                                                "Set_new_CAT_for_SNOW_(RH)": {
                                                    "inputs": {
                                                        "name": "SNOWCategories",
                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(RH)')['tags'][parameters('SnowCatOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                            "@parameters('SnowCatOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(RH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(RH)": {
                                            "actions": {
                                                "Set_new_ENV_for_SNOW_(RH)": {
                                                    "inputs": {
                                                        "name": "SNOWEnvironmentCode",
                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(RH)')['tags'][parameters('SnowEnvOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                            "@parameters('SnowEnvOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "API_CALL_-_Get_subscription_data_(RH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(RH)": {
                                            "actions": {
                                                "Set_new_FO_for_SNOW_(RH)": {
                                                    "inputs": {
                                                        "name": "SNOWTenantCode",
                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(RH)')['tags'][parameters('SnowFoOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                            "@parameters('SnowFoOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_ENV_overide_tag_is_present_at_subscription_level_set_new_ENV_(RH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(RH)": {
                                            "actions": {
                                                "Set_new_GenericConfigItemID_for_SNOW_(RH)": {
                                                    "inputs": {
                                                        "name": "GenericConfigItemID",
                                                        "value": "@{body('API_CALL_-_Get_subscription_data_(RH)')['tags'][parameters('SnowGenericCiOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_CALL_-_Get_subscription_data_(RH)')?['tags']",
                                                            "@parameters('SnowGenericCiOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(RH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Set_variable_-_SubscriptionID_(RH)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Scope"
                                },
                                "Get_generic_resource_DATA_if_available_(2)": {
                                    "actions": {
                                        "API_Call_-_Get_generic_resource_data_(2)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "@{body('Filter_array_-_Provider_resource_type_(2)')[0]['apiVersions'][0]}"
                                                },
                                                "uri": "https://management.azure.com@{variables('ResourceID')}"
                                            },
                                            "runAfter": {
                                                "Filter_array_-_Provider_resource_type_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "API_Call_-_Get_resource_provider_information_(2)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "headers": {
                                                    "Content-Type": "application/json"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2015-01-01"
                                                },
                                                "uri": "https://management.azure.com/subscriptions/@{split(variables('ResourceID'),'/')[2]}/providers/@{split( split( variables('ResourceID'), '/providers/' )[1], '/')[0]}"
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        },
                                        "Filter_array_-_Provider_resource_type_(2)": {
                                            "inputs": {
                                                "from": "@body('API_Call_-_Get_resource_provider_information_(2)')['resourceTypes']",
                                                "where": "@equals(toLower(item()['resourceType']), toLower(split(split(variables('ResourceID'), '/providers/')[1], '/')[1]))"
                                            },
                                            "runAfter": {
                                                "API_Call_-_Get_resource_provider_information_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Query"
                                        },
                                        "Set_variable_-_Resource_Data_(Create_or_Update)_(2)": {
                                            "inputs": {
                                                "name": "ResourceData",
                                                "value": "@body('API_Call_-_Get_generic_resource_data_(2)')"
                                            },
                                            "runAfter": {
                                                "API_Call_-_Get_generic_resource_data_(2)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable"
                                        }
                                    },
                                    "runAfter": {
                                        "Determine_SNOW_target_ENV_(RH)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Scope"
                                },
                                "Set_variable_-_ForcedConfigItemID_to_empty_(2)": {
                                    "inputs": {
                                        "name": "ForcedConfigItemID",
                                        "value": "@{trim('')}"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_GenericConfigItemID_to_default_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_GenericConfigItemID_to_default_(2)": {
                                    "inputs": {
                                        "name": "GenericConfigItemID",
                                        "value": "DEFAULT"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_SNOWCategories_(RH)_to_default": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_ResourceData_=_(empty)_(2)": {
                                    "inputs": {
                                        "name": "ResourceData",
                                        "value": "@null"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_SkipAlert_=_false_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_ResourceID_(2)": {
                                    "inputs": {
                                        "name": "ResourceID",
                                        "value": "@{toLower(items('Process_each_ResourceID_in_the_alert_and_create_incident'))}"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_ResourceData_=_(empty)_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_SNOWCategories_(RH)_to_default": {
                                    "inputs": {
                                        "name": "SNOWCategories",
                                        "value": "DEFAULT"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_SNOWTenantCode_(RH)_to_default": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_SNOWEnvironmentCode_(RH)_to_default": {
                                    "inputs": {
                                        "name": "SNOWEnvironmentCode",
                                        "value": "DEFAULT"
                                    },
                                    "runAfter": {},
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_SNOWTenantCode_(RH)_to_default": {
                                    "inputs": {
                                        "name": "SNOWTenantCode",
                                        "value": "DEFAULT"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_SNOWEnvironmentCode_(RH)_to_default": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_SkipAlert_=_false_(2)": {
                                    "inputs": {
                                        "name": "SkipAlert",
                                        "value": false
                                    },
                                    "runAfter": {
                                        "Set_variable_-_ForcedConfigItemID_to_empty_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                },
                                "Set_variable_-_SubscriptionID_(RH)": {
                                    "inputs": {
                                        "name": "SubscriptionID",
                                        "value": "@{split(variables('ResourceId'),'/')[2]}"
                                    },
                                    "runAfter": {
                                        "Set_variable_-_ResourceID_(2)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable"
                                }
                            },
                            "foreach": "@body('parse_Alert_JSON')?['data']['essentials']['alertTargetIDs']",
                            "runAfter": {},
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            },
                            "type": "Foreach"
                        }
                    },
                    "case": "Resource Health"
                },
                "Alert_type_-_SERVICE_HEALTH": {
                    "actions": {
                        "Condition_-_if_not_skipped,_send_alert_to_SNOW_(Service_Health)": {
                            "actions": {
                                "API_Call_-_Call_Event_Listener_function_-_SERVICE_HEALTH": {
                                    "inputs": {
                                        "body": "@outputs('Compose_-_EventJSON_-_Service_Health')",
                                        "headers": {
                                            "Content-Type": "application/json",
                                            "x-functions-key": "@variables('FunctionAPIKey')"
                                        },
                                        "method": "POST",
                                        "retryPolicy": {
                                            "count": 10,
                                            "interval": "PT30S",
                                            "maximumInterval": "PT2M",
                                            "minimumInterval": "PT30S",
                                            "type": "exponential"
                                        },
                                        "uri": "@{parameters('ListenerFunctionUrl')}"
                                    },
                                    "runAfter": {
                                        "Compose_-_EventJSON_-_Service_Health": [
                                            "Succeeded"
                                        ]
                                    },
                                    "runtimeConfiguration": {
                                        "secureData": {
                                            "properties": [
                                                "inputs"
                                            ]
                                        }
                                    },
                                    "type": "Http"
                                },
                                "Append_to_EventMessageText_-_Communication": {
                                    "inputs": {
                                        "name": "EventMessageText",
                                        "value": "@{body('parse_Alert_JSON')?['data']['alertContext']['properties']['communication']}@{variables('CRLF')}"
                                    },
                                    "runAfter": {
                                        "Append_to_EventMessageText_-_Title_and_Region": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable"
                                },
                                "Append_to_EventMessageText_-_Title_and_Region": {
                                    "inputs": {
                                        "name": "EventMessageText",
                                        "value": "Microsoft Azure Service Heatlh Alert@{variables('CRLF')}@{body('parse_Alert_JSON')['data']['alertContext']['properties']['title']}@{variables('CRLF')}@{variables('CRLF')}"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                },
                                "Compose_-_EventJSON_-_Service_Health": {
                                    "inputs": {
                                        "dateTimeOccured": "@{body('parse_Alert_JSON')['data']['essentials']['firedDateTime']}",
                                        "eventCategory": "@{variables('SNOWCategories')}",
                                        "eventMessageText": "@{variables('EventMessageText')}@{variables('CRLF')} -@{variables('CRLF')}",
                                        "eventSeverity": "@{variables('SeverityMapping')[body('parse_Alert_JSON')?['data']['essentials']['severity']]}",
                                        "eventType": "@{variables('EventType')}",
                                        "forcedMonitoringId": "@{variables('ForcedConfigItemID')}",
                                        "genericCIMonitoringId": "@{variables('GenericConfigItemID')}",
                                        "payloadtype": "itsm-event",
                                        "resourceid": "",
                                        "targetsnowenv": "@{variables('SNOWEnvironmentCode')}",
                                        "targetsnowfo": "@{variables('SNOWTenantCode')}"
                                    },
                                    "runAfter": {
                                        "Condition_-_is_subscription_targeted_(ServiceHealth)": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose"
                                },
                                "Condition_-_is_subscription_targeted_(ServiceHealth)": {
                                    "actions": {
                                        "API_call_-_Get_subscription_data_(ServiceHealth)": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://management.azure.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "queries": {
                                                    "api-version": "2020-01-01"
                                                },
                                                "uri": "https://management.azure.com/subscriptions/@{variables('SubscriptionID')}"
                                            },
                                            "runAfter": {
                                                "Set_variable_-_SubscriptionID_(ServiceHealth)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "If_SNOW_CAT_overide_tag_is_present_at_subscription_level_set_new_CAT_(SH)": {
                                            "actions": {
                                                "Set_new_CAT_for_SNOW_(SH)": {
                                                    "inputs": {
                                                        "name": "SNOWCategories",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(ServiceHealth)')['tags'][parameters('SnowCatOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                            "@parameters('SnowCatOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(SH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_ENV_overide_tag_at_subscription_level_set_new_ENV_(SH)": {
                                            "actions": {
                                                "Set_new_ENV_for_SNOW_(Service_Health)": {
                                                    "inputs": {
                                                        "name": "SNOWEnvironmentCode",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']?[parameters('SnowEnvOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                            "@parameters('SnowEnvOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "API_call_-_Get_subscription_data_(ServiceHealth)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(SH)": {
                                            "actions": {
                                                "Set_new_FO_for_SNOW_(SH)": {
                                                    "inputs": {
                                                        "name": "SNOWTenantCode",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(ServiceHealth)')['tags'][parameters('SnowFoOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                            "@parameters('SnowFoOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_ENV_overide_tag_at_subscription_level_set_new_ENV_(SH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "If_SNOW_GenericCI_overide_tag_is_set_at_subscription_level_set_new_ConfigID_(SH)": {
                                            "actions": {
                                                "Set_new_GenericConfigItemID_for_SNOW_(ServiceHealth)": {
                                                    "inputs": {
                                                        "name": "GenericConfigItemID",
                                                        "value": "@{body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']?[parameters('SnowGenericCiOverideTag')]}"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')",
                                                            "tags"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                                "@null"
                                                            ]
                                                        }
                                                    },
                                                    {
                                                        "contains": [
                                                            "@body('API_call_-_Get_subscription_data_(ServiceHealth)')?['tags']",
                                                            "@parameters('SnowGenericCiOverideTag')"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "If_SNOW_FO_overide_tag_is_present_at_subscription_level_set_new_FO_(SH)": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Set_variable_-_SubscriptionID_(ServiceHealth)": {
                                            "inputs": {
                                                "name": "SubscriptionID",
                                                "value": "@{split(first(body('Parse_Alert_JSON')?['data']?['essentials']?['alertTargetIDs']), '/subscriptions/')[1]}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "equals": [
                                                        "@body('Parse_Alert_JSON')?['data']?['essentials']?['alertTargetIDs']",
                                                        "@null"
                                                    ]
                                                }
                                            },
                                            {
                                                "equals": [
                                                    "@length(body('Parse_Alert_JSON')?['data']?['essentials']?['alertTargetIDs'])",
                                                    1
                                                ]
                                            },
                                            {
                                                "startsWith": [
                                                    "@first(body('Parse_Alert_JSON')?['data']?['essentials']?['alertTargetIDs'])",
                                                    "/subscriptions/"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Append_to_EventMessageText_-_Communication": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('SkipAlert')",
                                            false
                                        ]
                                    },
                                    {
                                        "equals": [
                                            "@length( intersection( split(replace(parameters('SnowCategoriesSkipped'), ' ', ''), ','), createArray(variables('SNOWCategories')) ))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "If"
                        }
                    },
                    "case": "ServiceHealth"
                }
            },
            "default": {
                "actions": {
                    "Terminate": {
                        "inputs": {
                            "runError": {
                                "code": "1",
                                "message": "ERROR - Unhandled Alert type [@{body('parse_Alert_JSON')?['data']['essentials']['monitoringService']}]"
                            },
                            "runStatus": "Failed"
                        },
                        "runAfter": {},
                        "type": "Terminate"
                    }
                }
            },
            "description": "Two type of alerts payload/schema are handled : Log analytics and service health alerts",
            "expression": "@body('parse_Alert_JSON')?['data']['essentials']['monitoringService']",
            "runAfter": {
                "Store_function_secret": [
                    "Succeeded"
                ]
            },
            "type": "Switch"
        },
        "Initialize_variable_-_AlertHash": {
            "inputs": {
                "variables": [
                    {
                        "name": "AlertHash",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ResultIndex": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_CRLF": {
            "inputs": {
                "variables": [
                    {
                        "name": "CRLF",
                        "type": "String",
                        "value": "\\r"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_EventType": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_DisabledAlertName": {
            "inputs": {
                "variables": [
                    {
                        "name": "DisabledAlertName",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_DisabledAlertReason": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_DisabledAlertReason": {
            "inputs": {
                "variables": [
                    {
                        "name": "DisabledAlert",
                        "type": "boolean"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_OUTPUT_SENTALERT": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_EventJSON": {
            "inputs": {
                "variables": [
                    {
                        "name": "EventJSON",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_CRLF": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_EventMessageText": {
            "inputs": {
                "variables": [
                    {
                        "name": "EventMessageText",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_GenericConfigItemID": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_EventType": {
            "inputs": {
                "variables": [
                    {
                        "name": "EventType",
                        "type": "string",
                        "value": "DEFAULT"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_EventMessageText": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ForcedConfigItemID": {
            "inputs": {
                "variables": [
                    {
                        "name": "ForcedConfigItemID",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Condition_-_Cancel_if_alert_message_is_for_resolved_condition": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_GenericConfigItemID": {
            "inputs": {
                "variables": [
                    {
                        "name": "GenericConfigItemID",
                        "type": "string",
                        "value": "DEFAULT"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ForcedConfigItemID": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_IgnoredColumns": {
            "inputs": {
                "variables": [
                    {
                        "name": "IgnoredColumns",
                        "type": "Array",
                        "value": [
                            "aggregatedvalue",
                            "timegenerated",
                            "filteronserviceprovidertagvalue"
                        ]
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_AlertHash": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_OUTPUT_SENTALERT": {
            "inputs": {
                "variables": [
                    {
                        "name": "OUTPUT_SENTALERT",
                        "type": "String",
                        "value": "NONE"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SNOWCategories": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResourceData": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResourceData",
                        "type": "Object"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SubscriptionID": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResourceGroup": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResourceGroup",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_DisabledAlertName": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResourceHealthSeverity": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResourceHealthSeverity",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ServiceTagValue": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResourceID": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResourceID",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SeverityMapping": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResultColumns": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResultColumns",
                        "type": "Array"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_EventJSON": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ResultIndex": {
            "inputs": {
                "variables": [
                    {
                        "name": "ResultIndex",
                        "type": "Integer"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ResultColumns": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SNOWCategories": {
            "inputs": {
                "variables": [
                    {
                        "name": "SNOWCategories",
                        "type": "String",
                        "value": "DEFAULT"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SNOWEnvironmentCode": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SNOWEnvironmentCode": {
            "inputs": {
                "variables": [
                    {
                        "name": "SNOWEnvironmentCode",
                        "type": "String",
                        "value": "DEFAULT"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SNOWTenantCode": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SNOWTenantCode": {
            "inputs": {
                "variables": [
                    {
                        "name": "SNOWTenantCode",
                        "type": "String",
                        "value": "DEFAULT"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ResourceHealthSeverity": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ScaleSetResourceID": {
            "inputs": {
                "variables": [
                    {
                        "name": "ScaleSetResourceID",
                        "type": "string"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ResourceID": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_ServiceTagValue": {
            "inputs": {
                "variables": [
                    {
                        "name": "ServiceTagValue",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_SkipAlert": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SeverityMapping": {
            "inputs": {
                "variables": [
                    {
                        "name": "SeverityMapping",
                        "type": "Object",
                        "value": {
                            "Sev0": "critical",
                            "Sev1": "error",
                            "Sev2": "warning",
                            "Sev3": "warning",
                            "Sev4": "warning"
                        }
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_IgnoredColumns": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SkipAlert": {
            "inputs": {
                "variables": [
                    {
                        "name": "SkipAlert",
                        "type": "Boolean",
                        "value": false
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ResourceData": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Initialize_variable_-_SubscriptionID": {
            "inputs": {
                "variables": [
                    {
                        "name": "SubscriptionID",
                        "type": "String"
                    }
                ]
            },
            "runAfter": {
                "Initialize_variable_-_ScaleSetResourceID": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        },
        "Parse_Alert_JSON": {
            "inputs": {
                "content": "@outputs('Compose_JSON_from_HTTP_request_body')",
                "schema": {
                    "properties": {
                        "data": {
                            "properties": {
                                "alertContext": {
                                    "properties": {},
                                    "type": "object"
                                },
                                "essentials": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "schemaId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "runAfter": {
                "Compose_JSON_from_HTTP_request_body": [
                    "Succeeded"
                ]
            },
            "type": "ParseJson"
        },
        "Store_function_secret": {
            "inputs": {
                "variables": [
                    {
                        "name": "FunctionAPIKey",
                        "type": "String",
                        "value": "@{body('API_Call_-_Retrieve_Function_Secret')?['default']}"
                    }
                ]
            },
            "runAfter": {
                "API_Call_-_Retrieve_Function_Secret": [
                    "Succeeded"
                ]
            },
            "type": "InitializeVariable"
        }
    },
    "contentVersion": "1.0.0.0",
    "outputs": {
        "OUTPUT_SENTALERT": {
            "type": "String",
            "value": "@{variables('OUTPUT_SENTALERT')}"
        }
    },
    "parameters": {
        "ListenerFunctionResourceID": {
            "defaultValue": "[variables('ListenerFunctionResourceID')]",
            "type": "String"
        },
        "ListenerFunctionUrl": {
            "defaultValue": "[variables('ListenerFunctionUrl')]",
            "type": "String"
        },
        "ServiceProviderManagedTag": {
            "defaultValue": "[variables('ServiceProviderManagedTag')]",
            "type": "String"
        },
        "ServiceProviderMonitoringCITag": {
            "defaultValue": "[variables('ServiceProviderMonitoringCITag')]",
            "type": "String"
        },
        "ServiceProviderMaintenanceTag": {
            "defaultValue": "[variables('ServiceProviderMaintenanceTag')]",
            "type": "String"
        },        
        "SnowCatOverideTag": {
            "defaultValue": "[variables('SnowCatOverideTag')]",
            "type": "String"
        },
        "SnowCategoriesSkipped": {
            "defaultValue": "N/A",
            "type": "String"
        },
        "SnowEnvOverideTag": {
            "defaultValue": "[variables('SnowEnvOverideTag')]",
            "type": "String"
        },
        "SnowFoOverideTag": {
            "defaultValue": "[variables('SnowFoOverideTag')]",
            "type": "String"
        },
        "SnowGenericCiOverideTag": {
            "defaultValue": "[variables('SnowGenericCiOverideTag')]",
            "type": "String"
        }
    },
    "triggers": {
        "manual": {
            "inputs": {
                "schema": {
                    "properties": {
                        "data": {
                            "properties": {
                                "alertContext": {
                                    "properties": {},
                                    "type": "object"
                                },
                                "essentials": {
                                    "properties": {},
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "schemaId": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "kind": "Http",
            "type": "Request"
        }
    }
}