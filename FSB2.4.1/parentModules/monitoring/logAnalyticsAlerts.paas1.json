{
  "alertRules": [
    {
      "alertName": "ACR authentication failures",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "ContainerRegistryLoginEvents | where ResultDescription != \"200\" | summarize AggregatedValue = count() by _ResourceId, bin(TimeGenerated,30m), CallerIpAddress, ResultDescription | project TimeGenerated, ResourceID=_ResourceId, AggregatedValue, ContainerRegistry= split(_ResourceId, \"/\", 8)[0],SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"deleterepository\", _ResourceId)) ",
      "evaluationFrequency": "PT2H",
      "operator": "GreaterThan",
      "windowSize": "PT2H",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "ACR repository deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "ContainerRegistryRepositoryEvents | where OperationName == \"DeleteRepository\" | summarize AggregatedValue=count() by _ResourceId, bin(TimeGenerated,30m) | project TimeGenerated, ResourceID=_ResourceId, AggregatedValue, ContainerRegistry= split(_ResourceId, \"/\", 8)[0],SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"deleterepository\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "ACR storage used",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "AzureMetrics | where MetricName == \"StorageUsed\" and Average > 379536455 | summarize count() by _ResourceId, bin(TimeGenerated,30m), Average | project TimeGenerated, AggregatedValue=Average, Average, ResourceID=_ResourceId, ContainerRegistry= split(_ResourceId, \"/\", 8)[0],SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"storageused\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS container cpu usage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "let capacityCounterName = 'cpuCapacityNanoCores'; let usageCounterName = 'cpuUsageNanoCores'; Perf  | where ObjectName == 'K8SNode'  | where CounterName == capacityCounterName | summarize AvgCPUCapacityNanoCores = avg(CounterValue)/1000000000 by bin(TimeGenerated, 30m), _ResourceId, Computer | join (Perf  | where ObjectName == \"K8SContainer\" and CounterName == usageCounterName  | summarize AvgCPUUsageNanoCores = avg(CounterValue)/1000000000 by bin(TimeGenerated, 30m), _ResourceId, InstanceName, Computer) on $left.Computer == $right.Computer | project Computer, ClusterName=split(InstanceName,\"/\",8)[0], ContainerName=split(InstanceName,\"/\",10)[0], Capacity=AvgCPUCapacityNanoCores, Usage=AvgCPUUsageNanoCores, UsagePercentage=AvgCPUUsageNanoCores*100/AvgCPUCapacityNanoCores, UsageMillicore=AvgCPUUsageNanoCores*1000, AggregatedValue=AvgCPUUsageNanoCores*100/AvgCPUCapacityNanoCores, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceID=_ResourceId, NodeName = Computer,alerthash=hash_md5(strcat(\"readinessNode\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS container memory usage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "let endDateTime = now(); let startDateTime = ago(1h); let trendBinSize = 1m; let capacityCounterName = 'memoryCapacityBytes'; let usageCounterName = 'memoryRssBytes'; KubeNodeInventory | where TimeGenerated < endDateTime | where TimeGenerated >= startDateTime | distinct ClusterName, Computer | join hint.strategy=shuffle ( Perf | where TimeGenerated < endDateTime | where TimeGenerated >= startDateTime | where ObjectName == 'K8SNode' | where CounterName == capacityCounterName | summarize LimitValue = max(CounterValue) by Computer, CounterName, bin(TimeGenerated, trendBinSize) | project Computer, CapacityStartTime = TimeGenerated, CapacityEndTime = TimeGenerated + trendBinSize, LimitValue ) on Computer | join kind=inner hint.strategy=shuffle ( Perf | where TimeGenerated < endDateTime + trendBinSize | where TimeGenerated >= startDateTime - trendBinSize | where ObjectName == 'K8SNode' | where CounterName == usageCounterName | project Computer, UsageValue = CounterValue, TimeGenerated, _ResourceId ) on Computer | where TimeGenerated >= CapacityStartTime and TimeGenerated < CapacityEndTime | project ClusterName, Computer, TimeGenerated, ResourceID=tostring(_ResourceId), UsagePercent = UsageValue * 100.0 / LimitValue | summarize AvgUsagePercent = avg(UsagePercent) by bin(TimeGenerated, trendBinSize), ClusterName, NodeName=Computer, UsagePercent, ResourceID | summarize AggregatedValue = arg_max(AvgUsagePercent,*) by ClusterName | project ClusterName, NodeName, TimeGenerated, AggregatedValue, UsagePercent, ResourceID, SubscriptionId=split(ResourceID, \"/\", 2)[0], Resource_group=split(ResourceID, \"/\", 4)[0], alerthash=hash_md5(strcat(\"AKSContainerMemory\", ResourceID))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 95,
      "dimensionsName": "UsagePercent",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS endpoint failure",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents | where ObjectKind == \"Endpoints\" and Reason == \"FailedToUpdateEndpoint\" | summarize RebootCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name | project TimeGenerated, ClusterName, Name, ResourceID=_ResourceId, AggregatedValue=RebootCount, RebootCount, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"EndpointFailure\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS Failed Pod Counts",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents | where ObjectKind == \"Pod\" and Reason contains \"Failed\" | summarize FailedCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name,Namespace | project TimeGenerated, ClusterName, Name, Namespace, ResourceID=_ResourceId, AggregatedValue=FailedCount, FailedCount, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"PodFailedStatus\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS Node Disk usage Percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "AzureMetrics | where MetricName == \"node_disk_usage_percentage\" and Average > 80 | summarize count() by _ResourceId, bin(TimeGenerated,30m),Average | project TimeGenerated, ClusterName = split(_ResourceId, \"/\", 8)[0], AggregatedValue=Average, Average, ResourceID=_ResourceId, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"EndpointFailure\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "AKS Node invalid disk capacity",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents | where ObjectKind == \"Node\" and Reason == \"InvalidDiskCapacity\" | summarize RebootCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name | project TimeGenerated, ClusterName, Name, ResourceID=_ResourceId, AggregatedValue=RebootCount, RebootCount, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"NodeInvalidDisk\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS Node Reboot",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents | where ObjectKind == \"Node\" and Reason == \"Rebooted\" | summarize RebootCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name | project TimeGenerated, ClusterName, Name, ResourceID=_ResourceId, AggregatedValue=RebootCount, RebootCount, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"NodeReboot\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS Nodes CPU usage Percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "AzureMetrics | where MetricName == \"node_cpu_usage_percentage\" and Average > 80 | summarize count() by _ResourceId, bin(TimeGenerated,30m), Average | project TimeGenerated, ClusterName = split(_ResourceId, \"/\", 8)[0], AggregatedValue=Average, Average, ResourceID=_ResourceId, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], alerthash=hash_md5(strcat(\"EndpointFailure\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "AKS Nodes Memory usage Percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "AzureMetrics | where MetricName == \"node_memory_rss_percentage\" and Average > 80 | summarize count() by _ResourceId, bin(TimeGenerated,30m),Average | project TimeGenerated, ClusterName = split(_ResourceId, \"/\", 8)[0], AggregatedValue=Average, Average, ResourceID=_ResourceId, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"EndpointFailure\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "AKS Nodes Readiness",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "let trendBinSize = 30m; KubeNodeInventory | distinct ClusterName, Computer, _ResourceId,TimeGenerated | summarize ClusterSnapshotCount = count() by bin(TimeGenerated, trendBinSize), ClusterName, Computer, _ResourceId | join hint.strategy=broadcast kind=inner ( KubeNodeInventory | summarize TotalCount = count(), ReadyCount = sumif(1, Status contains ('Ready'))   by ClusterName, Computer, bin(TimeGenerated, trendBinSize), _ResourceId  | extend NotReadyCount = TotalCount - ReadyCount ) on ClusterName, Computer, _ResourceId, TimeGenerated | summarize NotReadyCount = max(todouble(NotReadyCount) / ClusterSnapshotCount) by _ResourceId,TimeGenerated,ClusterName,Computer | project  TimeGenerated, ClusterName, Computer,   AggregatedValue = NotReadyCount, NotReadyCount, _ResourceId,  ResourceID=_ResourceId, SubscriptionId=split(_ResourceId, \"/\", 2)[0],   Resource_group=split(_ResourceId, \"/\", 4)[0],NodeName = Computer,  alerthash=hash_md5(strcat(\"readinessNode\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "NotReadyCount",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS pending Pods count",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents | where ObjectKind == \"Pod\" and Reason == \"FailedScheduling\" | summarize PendingCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name,Namespace | project TimeGenerated, ClusterName, Name, Namespace, ResourceID=_ResourceId, AggregatedValue=PendingCount, PendingCount, SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"PodPendingStatus\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "threshold": 1,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "AKS PVC failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents| where ObjectKind == \"PersistentVolumeClaim\" and Reason == \"ProvisioningFailed\"| summarize RebootCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name,Message| project TimeGenerated, ClusterName, Name, ResourceID=_ResourceId, AggregatedValue=RebootCount, RebootCount, Message,SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"PVCFailure\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue",
      "skipQueryValidation": true
    },
    {
      "alertName": "AKS Unhealthy Pods count",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute-AKS - Part of standard set of log alerts - Category AZURE RESOURCES - EventType PERFORMANCE",
      "alertSeverity": 2,
      "query": "KubeEvents| where ObjectKind == \"Pod\" and Reason == \"Unhealthy\"| summarize RebootCount=count() by bin(TimeGenerated,30m),_ResourceId,ClusterName,Name,Message| project TimeGenerated, ClusterName, Name, ResourceID=_ResourceId, AggregatedValue=RebootCount, RebootCount, Message,SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"UnhealthyPods\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue",
      "skipQueryValidation": true
    },
    {
      "alertName": "Analysis Services - Memory Thrashing",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 1,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.ANALYSISSERVICES\" and MetricName == \"memory_thrashing_metric\" | summarize AggregatedValue = max(Maximum) by bin(TimeGenerated, 30m),_ResourceId,MetricName | project TimeGenerated,AggregatedValue,SubscriptionID=split(_ResourceId, \"/\",2)[0], Resource_group=split(_ResourceId,\"/\",4)[0], Resource_name=split(_ResourceId, \"/\", 8)[0], memory_thrashing_metric=round(AggregatedValue, 1), ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"analysismemthrash\", _ResourceId)), Alert_name=MetricName ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Analysis Services - Memory Usage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 1,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.ANALYSISSERVICES\" and MetricName == \"MemoryUsage\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m),_ResourceId,MetricName | project TimeGenerated,AggregatedValue,SubscriptionID=split(_ResourceId, \"/\",2)[0], Resource_group=split(_ResourceId,\"/\",4)[0], Resource_name=split(_ResourceId, \"/\", 8)[0], MemoryUsage=round(AggregatedValue, 1), ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"analysismemusage\", _ResourceId)), Alert_name=MetricName ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Analysis Services - Threads Command pool busy threads",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 2,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.ANALYSISSERVICES\" and MetricName == \"CommandPoolBusyThreads\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m),_ResourceId,MetricName | project TimeGenerated,AggregatedValue,SubscriptionID=split(_ResourceId, \"/\",2)[0], Resource_group=split(_ResourceId,\"/\",4)[0], Resource_name=split(_ResourceId, \"/\", 8)[0],CommandPoolBusyThreads=round(AggregatedValue, 1), ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"analysisbusythread\", _ResourceId)), Alert_name=MetricName ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Analysis Services - Threads Input output job threads",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 1,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.ANALYSISSERVICES\" and MetricName == \"ProcessingPoolBusyIOJobThreads\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m),_ResourceId,MetricName | project TimeGenerated,AggregatedValue,SubscriptionID=split(_ResourceId, \"/\",2)[0], Resource_group=split(_ResourceId,\"/\",4)[0], Resource_name=split(_ResourceId, \"/\", 8)[0], ProcessingPoolBusyIOJobThreads=round(AggregatedValue, 1), ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"analysisbusyio\", _ResourceId)), Alert_name=MetricName ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 4,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Analysis Services - Threads Long parsing job queue length",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 2,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.ANALYSISSERVICES\" and MetricName == \"LongParsingJobQueueLength\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m),_ResourceId,MetricName | project TimeGenerated,AggregatedValue,SubscriptionID=split(_ResourceId, \"/\",2)[0], Resource_group=split(_ResourceId,\"/\",4)[0], Resource_name=split(_ResourceId, \"/\", 8)[0], LongParsingJobQueueLength=round(AggregatedValue, 1), ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"analysisqueuelen\", _ResourceId)), Alert_name=MetricName ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "App Service - Average Response Time",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Web - The average time spent for the app to service requests in ms - Category AZURE App Service",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceProvider == \"MICROSOFT.WEB\"| where MetricName == \"AverageResponseTime\"| summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId, MetricName| project TimeGenerated, AggregatedValue,SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0],Resource=split(ResourceId, \"/\", 8)[0], MetricName, MetricValue=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"appsvcresptim\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 4,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "App Service - Health Check Status",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Web - The average health status across the application's instances in the App Service Plan - Category AZURE App Service",
      "alertSeverity": 0,
      "query": "AzureMetrics| where ResourceProvider == \"MICROSOFT.WEB\"| where MetricName == \"HealthCheckStatus\"| summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId, MetricName| project TimeGenerated, AggregatedValue,SubscriptionId=tostring(split(ResourceId, \"/\", 2)[0]), Resource_group=tostring(split(ResourceId, \"/\", 4)[0]),Resource=tostring(split(ResourceId, \"/\", 8)[0]), MetricName, MetricValue=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"appsvchc\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "LessThan",
      "windowSize": "PT30M",
      "threshold": 50,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "App Service Plan - CPU Percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Web - The average CPU used across all instances of the plan - Category AZURE App Service Plan",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceProvider == \"MICROSOFT.WEB\"| where MetricName == \"CpuPercentage\"| summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId, MetricName| project TimeGenerated, AggregatedValue,SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0],Resource=split(ResourceId, \"/\", 8)[0], MetricName, MetricValue=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"appsvccpupc\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "App Service Plan - Memory Percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Web - The average memory used in all instances of the plan - Category AZURE App Service Plan",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceProvider == \"MICROSOFT.WEB\"| where MetricName == \"MemoryPercentage\"| summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId, MetricName| project TimeGenerated, AggregatedValue,SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0],Resource=split(ResourceId, \"/\", 8)[0], MetricName, MetricValue=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"appsvcmempc\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - CPU limit alert",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - PaaS SQL - EventType PERFORMANCE - CPU limit status alerts. Applicable to both Azure SQL Database and Azure SQL Managed Instance",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"cpu_limit\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], processor_average_percent=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqlcpulimitpc\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - CPU Usage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - The Average CPU Utilization Metric is based on average CPU usage over the time period selected for the view.",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"cpu_used\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], cpu_used=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqlcpuusedpc\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - Physical Data read percentage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - Physical Data read percentage status alerts. Applicable to both Azure SQL Database and Azure SQL Managed Instance",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"physical_data_read_percent\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], physical_data_read_percent=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqldatareadpc\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - Process Core percent",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - Total CPU consumption by user workloads and internal processes is reported reported via the sqlserver_process_core_percent Azure Monitor metrics, for single databases and elastic pools at the pool level. Applicable to both Azure SQL Database and Azure SQL Managed Instance.",
      "alertSeverity": 1,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"sqlserver_process_core_percent\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], sqlserver_process_core_percent=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqlcorepercent\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - Process memory percent",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE- SQL Process memory usage provides the total server memory as a percent of total physical memory form WMI. Applicable to both Azure SQL Database and Azure SQL Managed Instance",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"sqlserver_process_memory_percent\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], sqlserver_process_memory_percent=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqlmempercent\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQL - Storage Percent",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - Total allocated Data Storage including data files and data pages. Applicable to both Azure SQL Database and Azure SQL Managed Instance",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.SQL\" | where MetricName in (\"storage_percent\") | parse _ResourceId with * \"/databases/\" Resource | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), Resource, _ResourceId | project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], storage_percent=round(AggregatedValue, 1), AggregatedValue=round(AggregatedValue, 1), ResourceID=tostring(split(tolower(_ResourceId), \"/databases/\", 0)[0]), Server_name=split(_ResourceId, \"/\", 8)[0], DB_name=Resource, alerthash=hash_md5(strcat(\"sqlstopc\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Azure SQLMI - CPU Usage",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - Average CPU percentage for Azure SQL Managed Instance triggers alert when it exceeds 80 percent",
      "alertSeverity": 1,
      "query": "AzureDiagnostics| where _ResourceId has \"microsoft.sql/managedinstances\" and Category == \"ResourceUsageStats\"| extend avg_cpu_pct = toreal(column_ifexists(\"avg_cpu_percent_s\",0))| summarize AggregatedValue = round(avg(avg_cpu_pct),1) by bin(TimeGenerated, 30m), _ResourceId| project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], SQL_Managed_instance_name=split(_ResourceId, \"/\", 8)[0], AggregatedValue, CPU_average_percent=AggregatedValue, ResourceID=tolower(_ResourceId), alerthash=hash_md5(strcat(\"sqlmicpupct\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue",
      "skipQueryValidation": true
    },
    {
      "alertName": "Azure SQLMI - Storage Percent",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MSSQL - EventType PERFORMANCE - Used storage as percentage of Reserved storage capacity on the Managed Instance triggers alert when it exceeds 80 percent",
      "alertSeverity": 2,
      "query": "AzureDiagnostics| where _ResourceId has \"microsoft.sql/managedinstances\" and Category == \"ResourceUsageStats\"| extend storage_used_pct = 100 * toreal(column_ifexists(\"storage_space_used_mb_s\",0)) / toreal(column_ifexists(\"reserved_storage_mb_s\",1))| summarize AggregatedValue = round(avg(storage_used_pct), 2) by bin(TimeGenerated, 30m), _ResourceId| project TimeGenerated, SubscriptionID=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], SQL_Managed_instance_name=split(_ResourceId, \"/\", 8)[0], AggregatedValue, Storage_used_percent=AggregatedValue, ResourceID=tolower(_ResourceId), alerthash=hash_md5(strcat(\"sqlmistoragepct\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 80,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue",
      "skipQueryValidation": true
    },
    {
      "alertName": "Cosmos DB - Backup Operation Failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - EventType PERFORMANCE - Part of standard set of Activity Log alerts - Category AZURE CosmosDB",
      "alertSeverity": 1,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DOCUMENTDB\" and OperationNameValue == \"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/BACKUP/ACTION\" | where ActivityStatusValue == \"Failure\" or ActivityStatusValue == \"Cancel\" | project TimeGenerated, Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource_CosmosDB_AcName=split(_ResourceId, \" / \", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB - Manual Failover",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of Activity Log alerts - Category AZURE CosmosDB",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DOCUMENTDB\" and OperationNameValue == \"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/FAILOVERPRIORITYCHANGE/ACTION\" and ActivityStatusValue == \"Success\" | project TimeGenerated, Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], Resource_Action=OperationNameValue, ResourceID=_ResourceId ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB - P99 Replication Latency",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of AzureMetrics Log alerts - Category AZURE CosmosDB",
      "alertSeverity": 1,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DOCUMENTDB\" and MetricName == \"ReplicationLatency\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0], AggregatedValue, Replication_latency_ms=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cosdbreplat\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 1000,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Cosmos DB - Region Failed Over",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of ResouceSpecific AzDiag Log alerts_CDBControlPlaneRequests - Category AZURE CosmosDB",
      "alertSeverity": 1,
      "query": "CDBControlPlaneRequests | where OperationName == \"RegionFailoverComplete\" | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], Resource_Action=OperationName, SourceRegion=CurrentWriteRegion, TargetRegion=NewWriteRegion, HttpStatusCode=HttpStatusCode, ChangeinConsistancyLevelCDB_ActivityId=ActivityId, DefaultConsistencyLevel=DefaultConsistencyLevel, PrivateEndpointConnections=PrivateEndpointConnections, PrivateEndpointArmUrl=PrivateEndpointArmUrl, ResourceID=_ResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB - Server Side Latency",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of AzureMetrics Log alerts - Category AZURE CosmosDB",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DOCUMENTDB\" and MetricName == \"ServerSideLatency\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0], AggregatedValue, Server_side_latency_ms=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cosdbsrvlat\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 100,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Cosmos DB - Service Availability",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of AzureMetrics Log alerts - Category AZURE CosmosDB",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DOCUMENTDB\" and MetricName == \"ServiceAvailability\" | summarize AggregatedValue=min(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0], AggregatedValue, Service_availability=AggregatedValue, ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cosdbsrvavail\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "LessThan",
      "windowSize": "PT30M",
      "threshold": 99,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Cosmos DB - Too many Metadata Requests",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB SQL MetadataRequests",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DOCUMENTDB\" and MetricName == \"MetadataRequests\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionId=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0], AggregatedValue, Cosmos_MetadataRequests=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"metadatarequests\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 1000000,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Create or Update SQL Firewall Rule",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Management - Part of standard set of log alerts - Category SUBSCRIPTION ALERT",
      "alertSeverity": 3,
      "query": "AzureActivity | where OperationNameValue contains \"Microsoft.Sql/servers/firewallRules/write\" | where ActivityStatusValue == \"Success\" | project TimeGenerated,TenantId,SubscriptionId=split(_ResourceId, \"/\", 2)[0],FirewallRuleName=split(_ResourceId,\"/\",10)[0],Caller=iif(isempty(Caller),\"(Automation Runbook)\", Caller),Level,fwRuleResourceId=_ResourceId, ActionName=OperationNameValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT5M",
      "operator": "GreaterThan",
      "windowSize": "PT5M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Delete SQL Firewall Rule",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Management - Part of standard set of log alerts - Category SUBSCRIPTION ALERT",
      "alertSeverity": 3,
      "query": "AzureActivity | where OperationNameValue contains \"Microsoft.Sql/servers/firewallRules/delete\" | where ActivityStatusValue == \"Success\" | project TimeGenerated,TenantId,SubscriptionId=split(_ResourceId, \"/\", 2)[0],FirewallRuleName=split(_ResourceId,\"/\",10)[0],Caller=iif(isempty(Caller),\"(Automation Runbook)\", Caller),Level,fwRuleResourceId=_ResourceId, ActionName=OperationNameValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT5M",
      "operator": "GreaterThan",
      "windowSize": "PT5M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Analysis - Create or Update the Azure Analysis services",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue == \"MICROSOFT.ANALYSISSERVICES/SERVERS/WRITE\" and ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | summarize by CorrelationId, Caller, SubscriptionId, _ResourceId | project Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId,Resource_group=split(_ResourceId, \"/\", 4)[0],ResourceID=_ResourceId,Resource=split(_ResourceId, \"/\", 8)[0]",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Analysis - Delete the Azure Analysis services",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue == \"MICROSOFT.ANALYSISSERVICES/SERVERS/DELETE\" and ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId,Resource_group=split(_ResourceId, \"/\", 4)[0],Resource=split(_ResourceId, \"/\", 8)[0],ResourceID=_ResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Analysis - Suspend the Azure Analysis services",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE Analysis Services",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue == \"MICROSOFT.ANALYSISSERVICES/SERVERS/SUSPEND/ACTION\" and ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId,Resource_group=split(_ResourceId, \"/\", 4)[0],ResourceID=_ResourceId,Resource=split(_ResourceId, \"/\", 8)[0]",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Factory - Create or Update any Data Factory",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE DATA FACTORY Create or Update",
      "alertSeverity": 2,
      "query": "AzureActivity |where OperationNameValue == \"MICROSOFT.DATAFACTORY/FACTORIES/WRITE\" and ActivityStatusValue == \"Success\" | summarize by CorrelationId, Caller, SubscriptionId, _ResourceId | project Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId,Resource_group=split(_ResourceId, \"/\", 4)[0],ResourceID=_ResourceId,Resource=split(_ResourceId, \"/\", 8)[0] ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Factory - Data Factory has been Deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE DATA FACTORY",
      "alertSeverity": 1,
      "query": "AzureActivity |where OperationNameValue == \"MICROSOFT.DATAFACTORY/FACTORIES/DELETE\" and ActivityStatusValue == \"Success\" |  project Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId,Resource_group=split(_ResourceId, \"/\", 4)[0],ResourceID=_ResourceId ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Factory - Failed Activity runs",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE DATA FACTORY",
      "alertSeverity": 1,
      "query": "ADFActivityRun | where Status == \"Failed\" | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0],  PipelineName,  ActivityName, ActivityType, FailureType, ActivityRunId, PipelineRunId, EffectiveIntegrationRuntime, CorrelationId,  Start,  End,  ResourceID=ResourceId ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Factory - Failed pipeline runs",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of Activity Log alerts - Category AZURE DATA FACTORY",
      "alertSeverity": 1,
      "query": "ADFPipelineRun | where Category == \"PipelineRuns\" and Status == \"Failed\" | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Resource=split(ResourceId, \"/\", 8)[0], PipelineName,  FailureType,  RunId,  CorrelationId,  Start,  End,  ResourceID=ResourceId ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Function App - Failed Azure Function",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute - Part of standard set of log alerts - Category AZURE FUNCTIONS",
      "alertSeverity": 1,
      "query": "FunctionAppLogs | where Category == \"Host.Results\" and Level == \"Error\" and FunctionName != \"itsm-al-listener-atf2\" | project TimeGenerated, Caller = FunctionInvocationId, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource_function=split(_ResourceId, \"/\", 8)[0], FunctionName, TenantId,_ResourceId, FunctionInvocationId, Level, ExceptionMessage=split(ExceptionMessage,'Stack:')[0], ResourceID=tolower(_ResourceId)",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "FunctionApp Failed operations",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Compute - Part of standard set of log alerts - Category AZURE FUNCTIONS",
      "alertSeverity": 2,
      "query": "AppRequests | where Success == false | summarize failedCount=sum(ItemCount), impactedUsers=dcount(UserId) by OperationName, _ResourceId | project ResourceID=_ResourceId, AppName= split(_ResourceId, \"/\", 8)[0],SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],alerthash=hash_md5(strcat(\"storageused\", _ResourceId)), failedCount, Function=OperationName | order by failedCount desc ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue",
      "skipQueryValidation": true
    },
    {
      "alertName": "Redis Cache - Cache misses",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE Redis Cache",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"REDIS\" | where MetricName == \"cachemisses\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Redis_Cache=split(ResourceId, \"/\", 8)[0], AggregatedValue, RedisCacheMisses=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cachemisses\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 1000,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Category AZURE Redis Cache",
      "alertSeverity": 1,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.CACHE\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"REDIS\" | where MetricName == \"percentProcessorTime\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\",2)[0], Resource_group=split(ResourceId, \"/\",4)[0], Redis_Cache=split(ResourceId, \"/\",8)[0], CPU_percent_Processor_Time=round(AggregatedValue,1), ResourceID=ResourceId, AggregatedValue, alerthash=hash_md5(strcat(\"rediscputime\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache - MEM usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Category AZURE Redis Cache",
      "alertSeverity": 1,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"REDIS\" | where MetricName == \"usedmemorypercentage\" | summarize AggregatedValue = avg(Count) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\",2)[0], Resource_group=split(ResourceId, \"/\",4)[0], Redis_Cache=split(ResourceId, \"/\",8)[0], used_memory_percentage=round(AggregatedValue,1), ResourceID=ResourceId, AggregatedValue, alerthash=hash_md5(strcat(\"redismempc\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache - Reboot initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Category AZURE Redis Cache",
      "alertSeverity": 2,
      "query": "AzureActivity| where OperationNameValue == \"MICROSOFT.CACHE/REDIS/FORCEREBOOT/ACTION\" and ActivityStatusValue == \"Success\"| extend P=parse_json(Properties) | project TimeGenerated, Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId, Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceID=_ResourceId,Resource=split (_ResourceId, \"/\", 8)[0],Resource_action=OperationNameValue",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache - Server load is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Category AZURE Redis Cache",
      "alertSeverity": 1,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"REDIS\" | where MetricName == \"serverLoad\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\",2)[0], Resource_group=split(ResourceId, \"/\",4)[0], Redis_Cache=split(ResourceId, \"/\",8)[0], server_load=round(AggregatedValue,1), ResourceID=ResourceId, AggregatedValue, alerthash=hash_md5(strcat(\"redissrvload\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache - Total errors",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE Redis Cache",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where split(ResourceId, \"/\", 7)[0] == \"REDIS\" | where MetricName == \"errors\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Redis_Cache=split(ResourceId, \"/\", 8)[0], AggregatedValue, ErrorsCount=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"errors\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Table Storage - Availability less than 99 percent",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceId contains \"/TABLESERVICES/\" and MetricName == \"Availability\"| summarize AggregatedValue = avg(Minimum) by _ResourceId, bin(TimeGenerated, 30m) | project TimeGenerated,Availability_percentage=round(AggregatedValue, 1),AggregatedValue=round(AggregatedValue, 1),SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],SA_name=tostring(split(_ResourceId, \"/\", 8)[0]),ResourceID = tostring(split(tolower(_ResourceId), \"/tableservices/\", 0)[0]),alerthash=hash_md5(strcat(\"tableavailability\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "LessThan",
      "windowSize": "PT30M",
      "threshold": 99,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Table Storage - SuccessE2ELatency greater than threshold",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceId contains \"/TABLESERVICES/\" and MetricName == \"SuccessE2ELatency\"| summarize AggregatedValue = avg(Maximum) by _ResourceId, bin(TimeGenerated, 30m)| project TimeGenerated,Latency_ms=round(AggregatedValue, 1),AggregatedValue=round(AggregatedValue, 1),SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],SA_name=tostring(split(_ResourceId, \"/\", 8)[0]),ResourceID = tostring(split(tolower(_ResourceId), \"/tableservices/\", 0)[0]),alerthash=hash_md5(strcat(\"tableE2Elatency\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 500,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Table Storage - SuccessServerLatency greater than threshold",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "AzureMetrics| where ResourceId contains \"/TABLESERVICES/\" and MetricName == \"SuccessServerLatency\"| summarize AggregatedValue = avg(Maximum) by _ResourceId, bin(TimeGenerated, 30m)| project TimeGenerated,Latency_ms=round(AggregatedValue, 1),AggregatedValue=round(AggregatedValue, 1),SubscriptionId=split(_ResourceId, \"/\", 2)[0],Resource_group=split(_ResourceId, \"/\", 4)[0],SA_name=tostring(split(_ResourceId, \"/\", 8)[0]),ResourceID = tostring(split(tolower(_ResourceId), \"/tableservices/\", 0)[0]),alerthash=hash_md5(strcat(\"tableerverlatency\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 500,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Table Storage - Throttling error",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "StorageTableLogs | where StatusCode == 503 | summarize RequestsThrottling=count(StatusCode) by _ResourceId, OperationName, StatusText | project SubscriptionID=split(_ResourceId, \"/\",2)[0],Resource_group=split(_ResourceId, \"/\",4)[0],SA_name=split(_ResourceId, \"/\",8)[0], ResourceID = split(tolower(_ResourceId), \"/tableservices/\", 0)[0], OperationName, StatusText, RequestsThrottling, alerthash=hash_md5(strcat(\"tablethrottling\",_ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Table Storage - Time Out error",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category AZURE RESOURCES",
      "alertSeverity": 2,
      "query": "StorageTableLogs | where StatusCode == 500| summarize RequestsTimedOut=count(StatusCode) by _ResourceId, OperationName, StatusText | project SubscriptionID=split(_ResourceId, \"/\",2)[0],Resource_group=split(_ResourceId, \"/\",4)[0],SA_name=split(_ResourceId, \"/\",8)[0], ResourceID = split(tolower(_ResourceId), \"/tableservices/\", 0)[0], OperationName, StatusText, RequestsTimedOut, alerthash=hash_md5(strcat(\"tabletimeout\",_ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    }
  ]
}