{
  "alertRules": [
    {
      "alertName": "Cosmos DB - Region offline",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of Activity Log alerts - Cosmos DB - Region offline",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/OFFLINEREGION/ACTION\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"OFFLINEREGIONACTION\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB - SQL Role assessment deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of Activity Log alerts - Cosmos DB - SQL Role assessment deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/SQLROLEASSIGNMENTS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=split(tolower(_ResourceId), \"/sqlroleassignments/\")[0], ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"SQLROLEASSIGNMENTSDELETE\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB - SQL Role Definition deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of Activity Log alerts - Cosmos DB - SQL Role Definition deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DOCUMENTDB/DATABASEACCOUNTS/SQLROLEDEFINITIONS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=split(tolower(_ResourceId), \"/sqlroledefinitions/\")[0], ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"SQLROLEDEFINITIONSDELETE\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Cassandra - Request errors 40x  (except 429) and 50x",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 40x and 50x",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where (StatusCode >= 400 and StatusCode != 429) | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmoserrors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Cassandra\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0 
    },
    {
      "alertName": "Cosmos DB Cassandra - Request errors 429",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 429",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where StatusCode == 429 | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmos429errors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Cassandra\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Gremlin - Request errors 40x (except 429) and 50x",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 40x and 50x",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where (StatusCode >= 400 and StatusCode != 429) | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmoserrors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Gremlin\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Gremlin - Request errors 429",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 429",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where StatusCode == 429 | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmos429errors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Gremlin\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Mongodb - Request errors 40x (except 429) and 50x",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 40x and 50x",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where (StatusCode >= 400 and StatusCode != 429) | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmoserrors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Mongodb\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Mongodb - Request errors 429",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 429",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where StatusCode == 429 | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmos429errors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Mongodb\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB SQL - Request errors 40x (except 429) and 50x",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 40x and 50x",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where (StatusCode >= 400 and StatusCode != 429) | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmoserrors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Sql\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB SQL - Request errors 429",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 429",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where StatusCode == 429 | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmos429errors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Sql\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Table - Request errors 40x (except 429) and 50x",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 40x and 50x",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where (StatusCode >= 400 and StatusCode != 429) | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmoserrors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Table\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Cosmos DB Table - Request errors 429",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-CosmosDB - Part of standard set of log alerts - Category Cosmos DB request errors 429",
      "alertSeverity": 2,
      "query": "let DataPlane = CDBDataPlaneRequests | where StatusCode == 429 | project TimeGenerated, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], Resource=split(_ResourceId, \"/\", 8)[0], SourceRegion=RegionName, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID=_ResourceId, alerthash=hash_md5(strcat(\"cosmos429errors\", _ResourceId)); CDBControlPlaneRequests | where ApiKind == \"Table\" | project ApiKind, ApiKindResourceType, ResourceID=_ResourceId | join kind = inner DataPlane on ResourceID | project TimeGenerated, SubscriptionId, Resource_group, Resource, SourceRegion, StatusCode, ClientIpAddress, OperationName, ActivityId, ResourceID, ApiKind, ApiKindResourceType, alerthash",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Data Bricks - Failed Jobs",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Analytics - Part of standard set of log alerts- Category-Data Bricks-Failed jobs",
      "alertSeverity": 2,
      "query": "DatabricksJobs | where ActionName == 'runFailed' | extend subscription_id = split(_ResourceId,'/')[2] | extend resource_group_name = split(_ResourceId,'/')[4] | extend cluster_id = extractjson('$clusterId', RequestParams) | extend job_id = extractjson('$jobId', RequestParams) | extend run_id = extractjson('$runId', RequestParams) | extend job_trigger_type = extractjson('$jobTriggerType', RequestParams) | extend job_terminal_state = extractjson('$jobTerminalState', RequestParams) | join kind=innerunique ( DatabricksClusters | extend cluster_id = extractjson('$clusterId', RequestParams) | extend cluster_name = extractjson('$clusterName', RequestParams) | top 1 by cluster_id ) on cluster_id | project TimeGenerated, _ResourceId, subscription_id, resource_group_name, job_id, run_id, job_terminal_state, cluster_id, cluster_name",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThanOrEqual",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 1
    },
    {
      "alertName": "Maria DB - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category Maria DB - CPU percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariaDbCPU=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Existing server key deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Existing server key deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/KEYS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"KEYSDELETE\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Firewall rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Firewall rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/FIREWALLRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Firewall rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Firewall rule Deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/FIREWALLRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - IO usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category MariaDB IO Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"io_consumption_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariaDBIO=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"io_consumption_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Long restart",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB Long Restart",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMARIADB\" | where CategoryValue == \"ResourceHealth\" | extend P=parse_json(Properties) | where P.eventProperties has \"Your Azure MariaDB database server restart is taking longer than anticipated\" | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_LongRestartMariaDB=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MariaDBLongRestart\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category MariaDB - Memory Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"memory_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariaDBMemory=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"memory_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Restart Initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - MariaDB Restart Initiated",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMARIADB\" | where OperationNameValue == \"MICROSOFT.DBFORMARIADB/SERVERS/RESTART/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_RestartMariaDB=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MariadbRestart\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Server Log usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category MariaDB - Server Log percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"serverlog_storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariadbLog=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"serverlog_storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Server storage usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category MariaDB - Server storage percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariadbStorage=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Threat detection policy changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Threat detection policy changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/SECURITYALERTPOLICIES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"SECURITYALERTPOLICIESWRITE\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Total connections failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of log alerts - Category Maria DB connections failed",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMARIADB\" and MetricName == \"connections_failed\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MariaDB=split(ResourceId, \"/\", 8)[0], AggregatedValue, MariaDBConnFailed=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"connections_failed\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Maria DB - Virtual network rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Virtial network rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/VIRTUALNETWORKRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId, tostring(\"/virtualnetworkrules\"), 0)[0] | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Maria DB - Virtual network rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MariaDB - Part of standard set of Activity Log alerts - Maria DB - Virtual network rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMARIADB/SERVERS/VIRTUALNETWORKRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId, tostring(\"/virtualnetworkrules\"), 0)[0] | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL - CPU percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLCPU=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Existing server key deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Existing server key deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/KEYS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"KEYSDELETE\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Firewall rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Firewall rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/FIREWALLRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Firewall rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Firewall rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/FIREWALLRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - IO usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL IO Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"io_consumption_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLIO=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"io_consumption_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Long restart",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL Long Restart",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMYSQL\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"SERVERS\" | where CategoryValue == \"ResourceHealth\" | extend P=parse_json(Properties) | where P.eventProperties has \"Your Azure MySQLDB database server restart is taking longer than anticipated\" | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_LongRestartMySQLDB=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MySQLDBLongRestart\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL - Memory Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"memory_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLMemory=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"memory_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Restart Initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL Restart Initiated",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMYSQL\" | where OperationNameValue == \"MICROSOFT.DBFORMYSQL/SERVERS/RESTART/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_RestartMySQL=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MySQLRestart\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Server Log usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL - Server Log percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"serverlog_storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLLog=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"serverlog_storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Server storage usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL - Server storage percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLStorage=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Server threat detection policy changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Server threat detection policy changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/SECURITYALERTPOLICIES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"SECURITYALERTPOLICIESWRITE\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Total connections failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL connections failed",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"connections_failed\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLConnFailed=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"connections_failed\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL - Virtual network rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Virtual network rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/VIRTUALNETWORKRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/virtualnetworkrules\"),0)[0]    | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL - Virtual network rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL - Virtual network rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORMYSQL/SERVERS/VIRTUALNETWORKRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/virtualnetworkrules\"),0)[0]    | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL Flexible server - Host CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL flexible - Host CPU percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLFlexibleHostCPU=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL Flexible server - Host memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL flexible - Host Memory Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"memory_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLFlexibleMemory=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"memory_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL Flexible server - IO usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL flexible IO Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"io_consumption_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLFlexibleIO=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"io_consumption_percent\", ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL Flexible server - Long restart",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL flexible Long Restart",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMYSQL\" | where CategoryValue == \"ResourceHealth\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | extend P=parse_json(Properties) | where P.eventProperties has \"server restart is taking longer than anticipated\" | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_LongRestartMySQLDBFlexible=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MySQLLongRestart\", _ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL Flexible server - Restart Initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of Activity Log alerts - MySQL flexible Restart Initiated",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORMYSQL\" | where OperationNameValue == \"MICROSOFT.DBFORMYSQL/FLEXIBLESERVERS/RESTART/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_RestartMySQLFlexible=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"MySQLRestart\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "MySQL Flexible server - Server storage usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL flexible - Server storage percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLFlexibleStoragePercent=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"storage_percent\", ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "MySQL Flexible server - Total aborted connections",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-MySQL - Part of standard set of log alerts - Category MySQL flexible aborted connections",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORMYSQL\" and MetricName == \"aborted_connections\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], MySQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, MySQLFlexibleAbortedConnections=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"aborted_connections\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL - CPU percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgresCPU=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Existing administrator deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL - Existing administrator deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/ADMINISTRATORS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=split(_ResourceId, \"/administrators\", 0)[0], ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"ADMINISTRATORSDELETE\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Firewall rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Firewall rule changed",
      "alertSeverity": 2,
      "query":  "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/FIREWALLRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project  TimeGenerated, Caller, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], FirewallRuleName=split(_ResourceId, \"/\", 10)[0], fwRuleResourceId=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Firewall rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL - Firewall rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/FIREWALLRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project  TimeGenerated, Caller, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], FirewallRuleName=split(_ResourceId, \"/\", 10)[0], fwRuleResourceId=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - IO usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL IO Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"io_consumption_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgresIO=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"io_consumption_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Long restart",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - Postgres Long Restart",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORPOSTGRESQL\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"SERVERS\" | where CategoryValue == \"ResourceHealth\" | extend P=parse_json(Properties) | where P.eventProperties has \"Your Azure PostgreSQL database server restart is taking longer than anticipated\" | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_LongRestartPostgres=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"PostgresLongRestart\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL - Memory Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"memory_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgresMemory=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"memory_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Restart Initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - Postgres Restart Initiated",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORPOSTGRESQL\" | where OperationNameValue == \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/RESTART/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_RestartPostgres=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"PostgresRestart\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Server key deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Server key deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/KEYS/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"KEYSDELETE\", ResourceId)) | extend ResourceID=strcat(\"/subscriptions/\", SubscriptionId, \"/resourceGroups/\", Resource_group, \"/providers/Microsoft.DBforPostgreSQL/servers/\", ResourceName)",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Server Log usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL - Server Log percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"serverlog_storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgresLog=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"serverlog_storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Server storage usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL - Server storage percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgreStorage=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Threat detection policy changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Threat detection policy changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/SECURITYALERTPOLICIES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=split(tolower(_ResourceId), \"/securityalertpolicies/\")[0], ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"SECURITYALERTPOLICIESWRITE\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Total connections failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL connections failed",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"SERVERS\" | where MetricName == \"connections_failed\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQL=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgresConnFailed=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"connections_failed\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL - Virtual network rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Virtual network rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/VIRTUALNETWORKRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project TimeGenerated, Caller, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0], fwRuleResourceId=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/virtualnetworkrules\"),0)[0] | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL - Virtual network rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Virtual network rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/SERVERS/VIRTUALNETWORKRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project TimeGenerated, Caller, SubscriptionId=split(_ResourceId, \"/\", 2)[0], Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], VirtualNetworkRuleName=split(_ResourceId, \"/\", 10)[0], fwRuleResourceId=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId,tostring(\"/virtualnetworkrules\"),0)[0] | extend alerthash=hash_md5(strcat(VirtualNetworkRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL Flexible server - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL Flexible server - CPU percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"cpu_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgreSQLFlexibleCPU=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cpu_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL Flexible server - fatal errors",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server fatal errors",
      "alertSeverity": 2,
      "query": "AzureDiagnostics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where column_ifexists(\"errorLevel_s\", \"NA\") == \"FATAL\" | project TimeGenerated, column_ifexists(\"sqlerrcode_s\",0),  SubscriptionId=SubscriptionId,  Resource_group=ResourceGroup,  Resource_PostgresFlexible=Resource, ResourceID=ResourceId, column_ifexists(\"Message\",\"\"), alerthash=hash_md5(strcat(\"FatalError\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0,
      "skipQueryValidation": true
    },
    {
      "alertName": "PostgreSQL Flexible server - Firewall rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server - Firewall rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/FLEXIBLESERVERS/FIREWALLRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId, tostring(\"/firewallrules\"), 0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL Flexible server - Firewall rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server - Firewall rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.DBFORPOSTGRESQL/FLEXIBLESERVERS/FIREWALLRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project    TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue | extend ResourceID = split(fwRuleResourceId, tostring(\"/firewallrules\"), 0)[0] | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL Flexible server - Long restart",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server Long Restart",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORPOSTGRESQL\" | where toupper(split(_ResourceId, \"/\", 7)[0]) == \"FLEXIBLESERVERS\" | where CategoryValue == \"ResourceHealth\" | extend P=parse_json(Properties) | where P.eventProperties has \"Your Azure PostgreSQL database server restart is taking longer than anticipated\" | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_LongRestartPostgreSQLFlexible=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"PostgresLongRestart\", _ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL Flexible server - Memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL Flexible server - Memory Percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"memory_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgreSQLFlexibleMemory=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"memory_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL Flexible server - panic errors",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server panic errors",
      "alertSeverity": 2,
      "query": "AzureDiagnostics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where column_ifexists(\"errorLevel_s\", \"NA\") == \"PANIC\" | project TimeGenerated, column_ifexists(\"sqlerrcode_s\",0),  SubscriptionId=SubscriptionId,  Resource_group=ResourceGroup,  Resource_PostgresFlexible=Resource, ResourceID=ResourceId, column_ifexists(\"Message\",\"\"), alerthash=hash_md5(strcat(\"PanicError\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0,
      "skipQueryValidation": true
    },
    {
      "alertName": "PostgreSQL Flexible server - Restart Initiated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of Activity Log alerts - PostgreSQL Flexible server Restart Initiated",
      "alertSeverity": 2,
      "query": "AzureActivity | where ResourceProviderValue == \"MICROSOFT.DBFORPOSTGRESQL\" | where OperationNameValue == \"MICROSOFT.DBFORPOSTGRESQL/FLEXIBLESERVERS/RESTART/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0],  Resource_RestartPostgreSQLFlexible=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"PostgresRestart\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "PostgreSQL Flexible server - Server storage usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL Flexible server - Server storage percent",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"storage_percent\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgreSQLFlexibleStorage=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"storage_percent\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "PostgreSQL Flexible server - Total connections failed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database-PostgreSQL - Part of standard set of log alerts - Category PostgreSQL Flexible server connections failed",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.DBFORPOSTGRESQL\" | where split(ResourceId, \"/\", 7)[0] == \"FLEXIBLESERVERS\" | where MetricName == \"connections_failed\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], PostgreSQLFlexible=split(ResourceId, \"/\", 8)[0], AggregatedValue, PostgreSQLFlexibleConnFailed=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"connections_failed\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache - Access keys regenerated",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Redis Cache - Access keys regenerated",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.CACHE/REDIS/REGENERATEKEY/ACTION\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties)| project TimeGenerated,  Caller,  SubscriptionId=split(_ResourceId, \"/\", 2)[0],  Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceName=split(_ResourceId, \"/\", 8)[0], ResourceID=_ResourceId, ClientIPaddress=CallerIpAddress, ActionName=OperationNameValue, ActionStatus=ActivityStatusValue, alerthash=hash_md5(strcat(\"REGENERATEKEYACTION\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache - Firewall rule changed",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Redis Cache - Firewall rule changed",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.CACHE/REDIS/FIREWALLRULES/WRITE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project     TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache - Firewall rule deleted",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of Activity Log alerts - Redis Cache - Firewall rule deleted",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue =~ \"MICROSOFT.CACHE/REDIS/FIREWALLRULES/DELETE\" | where ActivityStatusValue =~ \"Success\" | extend P=parse_json(Properties) | project     TimeGenerated,    Caller,    SubscriptionId=split(_ResourceId, \"/\", 2)[0],    Resource_group=split(_ResourceId, \"/\", 4)[0],    ResourceName=split(_ResourceId, \"/\", 8)[0],    FirewallRuleName=split(_ResourceId, \"/\", 10)[0],    fwRuleResourceId=_ResourceId,    ClientIPaddress=CallerIpAddress,    ActionName=OperationNameValue,    ActionStatus=ActivityStatusValue    | extend ResourceID = split(fwRuleResourceId,tostring(\"/firewallrules\"),0)[0]    | extend alerthash=hash_md5(strcat(FirewallRuleName, ActionName, ResourceID)) | project-away fwRuleResourceId",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache Enterprise - Cache misses is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - CACHE MISSES IS TOO HIGH",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" | where MetricName == \"cachemisses\" | summarize AggregatedValue = sum(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Redis_Cache=split(ResourceId, \"/\", 8)[0], AggregatedValue, RedisCacheMisses=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"cachemisses\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 1000,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache Enterprise - CPU usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - CPU USAGE IS TOO HIGH",
      "alertSeverity": 2,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.CACHE\" |where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" | where MetricName == \"percentProcessorTime\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated,SubscriptionID=split(ResourceId, \"/\",2)[0],Resource_group=split(ResourceId, \"/\",4)[0],Redis_Cache=split(ResourceId, \"/\",8)[0], CPU_percent_Processor_Time=round(AggregatedValue,1), ResourceID=ResourceId,AggregatedValue,alerthash=hash_md5(strcat(\"rediscputime\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache Enterprise - Force unlink Geo Replica",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - Force unlink Geo Replica",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue == \"MICROSOFT.CACHE/REDISENTERPRISE/DATABASES/FORCEUNLINK/ACTION\" |where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated, Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId, Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceID=_ResourceId,Resource=split (_ResourceId, \"/\", 8)[0], Resource_action=OperationNameValue, alerthash=hash_md5(strcat(\"redismempc\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache Enterprise - Memory usage is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - MEM USAGE IS TOO HIGH",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" | where MetricName == \"usedmemorypercentage\" | summarize AggregatedValue = avg(Count) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\",2)[0], Resource_group=split(ResourceId, \"/\",4)[0], Redis_Cache=split(ResourceId, \"/\",8)[0], used_memory_percentage=round(AggregatedValue,1), ResourceID=ResourceId, AggregatedValue,alerthash=hash_md5(strcat(\"redismempc\",ResourceId)) ",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 85,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache Enterprise - regenerate database access keys",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - Force unlink Geo Replica",
      "alertSeverity": 2,
      "query": "AzureActivity | where OperationNameValue == \"MICROSOFT.CACHE/REDISENTERPRISE/DATABASES/REGENERATEKEY/ACTION\" | where ActivityStatusValue == \"Success\" | extend P=parse_json(Properties) | project TimeGenerated, Caller=iif(isempty(Caller), \"(Automation Runbook)\", Caller), SubscriptionId, Resource_group=split(_ResourceId, \"/\", 4)[0], ResourceID=split(_ResourceId, tostring(\"/databases/default\"), 0)[0],Resource=split (_ResourceId, \"/\", 8)[0], Resource_action=OperationNameValue, alerthash=hash_md5(strcat(\"redismempc\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "timeAggregation": "Count",
      "threshold": 0
    },
    {
      "alertName": "Redis Cache Enterprise - Server load is too high",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category REDIS CACHE ENTERPRISE - SERVER LOAD IS TOO HIGH",
      "alertSeverity": 2,
      "query": "AzureMetrics |where ResourceProvider == \"MICROSOFT.CACHE\" |where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" |where MetricName == \"serverLoad\" | summarize AggregatedValue = avg(Average) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated,SubscriptionID=split(ResourceId, \"/\",2)[0], Resource_group=split(ResourceId, \"/\",4)[0], Redis_Cache=split(ResourceId, \"/\",8)[0], server_load=round(AggregatedValue,1), ResourceID=ResourceId, AggregatedValue, alerthash=hash_md5(strcat(\"redissrvload\",ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 90,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    },
    {
      "alertName": "Redis Cache Enterprise - Total errors",
      "alertDescription": "Cloud.PaaS.DCS-Azure-Database - Part of standard set of log alerts - Category Redis cache total errors",
      "alertSeverity": 2,
      "query": "AzureMetrics | where ResourceProvider == \"MICROSOFT.CACHE\" | where split(ResourceId, \"/\", 7)[0] == \"REDISENTERPRISE\" | where MetricName == \"errors\" | where TimeGenerated > ago(30m) | summarize AggregatedValue = avg(Total) by bin(TimeGenerated, 30m), ResourceId | project TimeGenerated, SubscriptionID=split(ResourceId, \"/\", 2)[0], Resource_group=split(ResourceId, \"/\", 4)[0], Redis_Cache=split(ResourceId, \"/\", 8)[0], AggregatedValue, ErrorsCount=round(AggregatedValue, 1), ResourceID=ResourceId, alerthash=hash_md5(strcat(\"errors\", ResourceId))",
      "evaluationFrequency": "PT30M",
      "operator": "GreaterThan",
      "windowSize": "PT30M",
      "threshold": 0,
      "dimensionsName": "ResourceID",
      "timeAggregation": "Average",
      "metricMeasureColumn": "AggregatedValue"
    }
  ]
}